View(BirbTemp)
BirbTemp =  read.table("../Data/1raw/body_temp.txt", header = TRUE)
View(BirbTemp)
ALL = merge(mutSpec, AA)
ALL = merge(mutSpec, AA, all = T)
rm(list=ls(all=TRUE))
###########Reading mutspec data
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
########AnAge data reading
AA = read.table("../Data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AA$temperature = AA$Temperature..K. - 273.15
BirbTemp =  read.table("../Data/1raw/body_temp.txt", header = TRUE)
BirbTemp =  read.table("../Data/1raw/body_temp.txt", header = TRUE)
ALL = merge(mutSpec, AA, all = T)
ALL = merge(ALL, BirbTemp, all = T)
View(ALL)
table(ALL$temperature)
str(ALL$temperature)
summary(ALL$temperature)
!is.na(ALL$temperature)
ALL[!is.na(ALL$temperature),]
nrow(ALL[!is.na(ALL$temperature),])
table(ALL[!is.na(ALL$temperature),]$Class)
View(mutSpec)
View(BirbTemp)
BirbTemp$Class = "Aves"
ALL = merge(mutSpec, AA, all = T)
ALL = merge(ALL, BirbTemp, all = T)
table(ALL[!is.na(ALL$temperature),]$Class)
ggviolin(ALL, x = "Class", y = "temperature", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "Body temperature, ?C",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylim = c(0, 50))
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.Violin.pdf', width = 10, height = 5.3)
#ggviolin(ALL, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(ALL, x = "Class", y = "temperature", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "Body temperature, ?C",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylim = c(0, 50))
dev.off()
table(ALL[!is.na(ALL$temperature),]$Class)
ALL$TCdivAG=ALL$T_C.N/ALL$A_G.N
ALL[ALL$TCdivAG == "Inf" | ALL$TCdivAG == "NaN",]$TCdivAG = NA
ALL$TCdivAG=ALL$T_C.N/ALL$A_G.N
View(ALL)
ALL[ALL$TCdivAG == "Inf" | ALL$TCdivAG == "NaN",]$TCdivAG = NA
ALLDIV = ALL[!is.na(ALL$A_G.N),]
View(ALL)
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(vioplot)) install.packages("vioplot")
library("ggpubr")
library(vioplot)
###########Reading mutspec data
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
########AnAge data reading
AA = read.table("../Data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AA$temperature = AA$Temperature..K. - 273.15
BirbTemp =  read.table("../Data/1raw/body_temp.txt", header = TRUE)
BirbTemp$Class = "Aves"
ALL = merge(mutSpec, AA, all = T)
ALL = merge(ALL, BirbTemp, all = T)
ggviolin(ALL, x = "Class", y = "temperature", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "Body temperature, ?C",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylim = c(0, 50))
ALLDIV = ALL[!is.na(ALL$A_G.N),]; ALLDIV$TCdivAG=ALLDIV$T_C.N/ALLDIV$A_G.N; ALLDIV[ALLDIV$TCdivAG == "Inf" | ALLDIV$TCdivAG == "NaN",]$TCdivAG = NA
ggviolin(ALLDIV, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
View(ALLDIV)
table(ALLDIV[!is.na(ALL$TCdivAG),]$Class)
ALLDIV[!is.na(ALL$TCdivAG),]$Class
table(ALLDIV[!is.na(TCdivAG$TCdivAG),]$Class)
table(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class)
ALLDIV[!is.na(ALLDIV$TCdivAG),]
ALLDIV = ALL[!is.na(ALL$A_G.N),]; ALLDIV$TCdivAG=ALLDIV$T_C.N/ALLDIV$A_G.N; ALLDIV[ALLDIV$TCdivAG == "Inf" | ALLDIV$TCdivAG == "NaN" | ALLDIV$TCdivAG == 0,]$TCdivAG  = NA
table(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class)
ALLDIV[!is.na(ALLDIV$TCdivAG),]
table(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class)
nrow(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class)
nrow(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class))
nrow(ALLDIV[!is.na(ALLDIV$TCdivAG),])
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.Violin.pdf', width = 10, height = 5.3)
ggviolin(ALL, x = "Class", y = "temperature", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "Body temperature, ?C",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylim = c(0, 50))
ALLDIV = ALL[!is.na(ALL$A_G.N),]; ALLDIV$TCdivAG=ALLDIV$T_C.N/ALLDIV$A_G.N; ALLDIV[ALLDIV$TCdivAG == "Inf" | ALLDIV$TCdivAG == "NaN" | ALLDIV$TCdivAG == 0,]$TCdivAG  = NA
ggviolin(ALLDIV, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
dev.off()
table(ALL[!is.na(ALL$temperature),]$Class)
table(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class)
ALLDIV = ALL[!is.na(ALL$A_G.N),]; ALLDIV$TCdivAG=ALLDIV$T_C.N/ALLDIV$A_G.N; ALLDIV[ALLDIV$TCdivAG == "Inf" | ALLDIV$TCdivAG == "NaN" | ALLDIV$TCdivAG == 0,]$TCdivAG  = NA; ALLDIV$TCdivAG = log2(ALLDIV$TCdivAG)
ggviolin(ALLDIV, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.Violin.pdf', width = 10, height = 5.3)
ggviolin(ALL, x = "Class", y = "temperature", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "Body temperature, ?C",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylim = c(0, 50))
ALLDIV = ALL[!is.na(ALL$A_G.N),]; ALLDIV$TCdivAG=ALLDIV$T_C.N/ALLDIV$A_G.N; ALLDIV[ALLDIV$TCdivAG == "Inf" | ALLDIV$TCdivAG == "NaN" | ALLDIV$TCdivAG == 0,]$TCdivAG  = NA; ALLDIV$TCdivAG = log2(ALLDIV$TCdivAG)
ggviolin(ALLDIV, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
dev.off()
table(ALL[!is.na(ALL$temperature),]$Class)
table(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class)
ALLDIV[!is.na(ALLDIV$TCdivAG),]
a = ALLDIV[!is.na(ALLDIV$TCdivAG),]
a
View(a)
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.Violin.pdf', width = 10, height = 5.3)
ggviolin(ALL, x = "Class", y = "temperature", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "Body temperature, ?C",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylim = c(0, 50))
ALLDIV = ALL[!is.na(ALL$A_G.N),]; ALLDIV$TCdivAG=ALLDIV$T_C.N/ALLDIV$A_G.N; ALLDIV[ALLDIV$TCdivAG == "Inf" | ALLDIV$TCdivAG == "NaN" | ALLDIV$TCdivAG == 0,]$TCdivAG  = NA; ALLDIV$TCdivAG = log2(ALLDIV$TCdivAG)
ggviolin(ALLDIV, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
dev.off()
library(caper)
library(geiger)
library(ggplot2)
library(dplyr)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
View(mutSpec)
mutSpec = mutSpec[mutSpec$Class == 'Actinopterygii',]
View(mutSpec)
mutSpec = mutSpec[mutSpec$Gene == 'CytB',]
View(mutSpec)
mutSpec = mutSpec[mutSpec$temperature != NA,]
summary(mutSpec$temperature)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpec = mutSpec[mutSpec$Class == 'Actinopterygii',]
mutSpec = mutSpec[mutSpec$Gene == 'CytB',]
summary(mutSpec$temperature)
mutSpec = mutSpec[is.na(mutSpec$temperature),]
View(mutSpec)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpec = mutSpec[mutSpec$Class == 'Actinopterygii',]
mutSpec = mutSpec[mutSpec$Gene == 'CytB',]
summary(mutSpec$temperature)
mutSpec = mutSpec[!is.na(mutSpec$temperature),]
nrow(mutSpec)
View(mutSpec)
5/0.49
5*0.49
library(caper)
library(geiger)
library(ggplot2)
library(dplyr)
rm(list=ls(all=TRUE))
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpec = mutSpec[mutSpec$Class == 'Actinopterygii',]
mutSpec = mutSpec[mutSpec$Gene == 'CytB',]
summary(mutSpec$temperature)
mutSpec = mutSpec[!is.na(mutSpec$temperature),]
nrow(mutSpec)
View(mutSpec)
4*0.05
4/0.05
4/146
View(mutSpec)
5/1270
5/0.4966758
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpec = mutSpec[mutSpec$Class == 'Actinopterygii',]
mutSpec = mutSpec[mutSpec$Gene == 'CytB',]
summary(mutSpec$temperature)
mutSpec = mutSpec[!is.na(mutSpec$temperature),]
nrow(mutSpec)
cor.test(mutSpec$G_A.N,mutSpec$NumOfFourFoldMut, method = 'spearman')
cor.test(mutSpec$G_A.N,mutSpec$NumberOfSeq, method = 'spearman')
cor.test(mutSpec$T_C.N,mutSpec$NumOfFourFoldMut, method = 'spearman') # Ah>Gh
cor.test(mutSpec$T_C.N,mutSpec$NumberOfSeq, method = 'spearman')      # Ah>Gh
A<-lm(mutSpec$T_C.N ~ mutSpec$temperature + mutSpec$NumOfFourFoldMut)
summary(A)
A<-lm(mutSpec$T_C.N ~ scale(mutSpec$temperature) + scale(mutSpec$NumOfFourFoldMut))
summary(A)
cor.test(mutSpec$T_C.N,mutSpec$NumOfFourFoldMut, method = 'spearman') # Ah>Gh
A<-lm(mutSpec$T_C.N ~ scale(mutSpec$temperature) + scale(mutSpec$NumOfFourFoldMut))
summary(A)
View(mutSpec)
mutSpec$A_G.SubstRate.heavy = mutSpec$T_C/mutSpec$T
mutSpec$A_G.SubstRate.heavy = mutSpec$T_C/mutSpec$T
mutSpec$A_T.SubstRate.heavy = mutSpec$T_A/mutSpec$T
mutSpec$A_C.SubstRate.heavy = mutSpec$T_G/mutSpec$T
mutSpec$T_G.SubstRate.heavy = mutSpec$A_C/mutSpec$A
mutSpec$T_A.SubstRate.heavy = mutSpec$A_T/mutSpec$A
mutSpec$T_C.SubstRate.heavy = mutSpec$A_G/mutSpec$A
mutSpec$G_T.SubstRate.heavy = mutSpec$C_A/mutSpec$C
mutSpec$G_C.SubstRate.heavy = mutSpec$C_G/mutSpec$C
mutSpec$G_A.SubstRate.heavy = mutSpec$C_T/mutSpec$C
mutSpec$C_G.SubstRate.heavy = mutSpec$G_C/mutSpec$G
mutSpec$C_T.SubstRate.heavy = mutSpec$G_A/mutSpec$G
mutSpec$C_A.SubstRate.heavy = mutSpec$G_T/mutSpec$G
barplot(mean(mutSpec$A_G.SubstRate.heavy),mean(mutSpec$A_T.SubstRate.heavy),mean(mutSpec$A_C.SubstRate.heavy),
mean(mutSpec$T_G.SubstRate.heavy),mean(mutSpec$T_A.SubstRate.heavy),mean(mutSpec$T_C.SubstRate.heavy),
mean(mutSpec$G_T.SubstRate.heavy),mean(mutSpec$G_C.SubstRate.heavy),mean(mutSpec$G_A.SubstRate.heavy),
mean(mutSpec$C_G.SubstRate.heavy),mean(mutSpec$C_T.SubstRate.heavy),mean(mutSpec$C_A.SubstRate.heavy))
mean(mutSpec$A_G.SubstRate.heavy)
barplot(c(mean(mutSpec$A_G.SubstRate.heavy),mean(mutSpec$A_T.SubstRate.heavy),mean(mutSpec$A_C.SubstRate.heavy),
mean(mutSpec$T_G.SubstRate.heavy),mean(mutSpec$T_A.SubstRate.heavy),mean(mutSpec$T_C.SubstRate.heavy),
mean(mutSpec$G_T.SubstRate.heavy),mean(mutSpec$G_C.SubstRate.heavy),mean(mutSpec$G_A.SubstRate.heavy),
mean(mutSpec$C_G.SubstRate.heavy),mean(mutSpec$C_T.SubstRate.heavy),mean(mutSpec$C_A.SubstRate.heavy)))
barplot(c(mean(mutSpec$A_G.SubstRate.heavy),mean(mutSpec$A_T.SubstRate.heavy),mean(mutSpec$A_C.SubstRate.heavy),
mean(mutSpec$T_G.SubstRate.heavy),mean(mutSpec$T_A.SubstRate.heavy),mean(mutSpec$T_C.SubstRate.heavy),
mean(mutSpec$G_T.SubstRate.heavy),mean(mutSpec$G_C.SubstRate.heavy),mean(mutSpec$G_A.SubstRate.heavy),
mean(mutSpec$C_G.SubstRate.heavy),mean(mutSpec$C_T.SubstRate.heavy),mean(mutSpec$C_A.SubstRate.heavy)), names = c(Ah>Gh,Ah>Th,Ah>Ch,Th>Gh,Th>Ah,Th>Ch,Gh>Th,Gh>Ch,Gh>Ah,Ch>Gh,Ch>Th,Ch>Ah))
barplot(c(mean(mutSpec$A_G.SubstRate.heavy),mean(mutSpec$A_T.SubstRate.heavy),mean(mutSpec$A_C.SubstRate.heavy),
mean(mutSpec$T_G.SubstRate.heavy),mean(mutSpec$T_A.SubstRate.heavy),mean(mutSpec$T_C.SubstRate.heavy),
mean(mutSpec$G_T.SubstRate.heavy),mean(mutSpec$G_C.SubstRate.heavy),mean(mutSpec$G_A.SubstRate.heavy),
mean(mutSpec$C_G.SubstRate.heavy),mean(mutSpec$C_T.SubstRate.heavy),mean(mutSpec$C_A.SubstRate.heavy)), names = c('Ah>Gh','Ah>Th','Ah>Ch','Th>Gh','Th>Ah','Th>Ch','Gh>Th','Gh>Ch','Gh>Ah','Ch>Gh','Ch>Th','Ch>Ah'))
barplot(c(mean(mutSpec$A_G.SubstRate.heavy),mean(mutSpec$A_T.SubstRate.heavy),mean(mutSpec$A_C.SubstRate.heavy),
mean(mutSpec$T_G.SubstRate.heavy),mean(mutSpec$T_A.SubstRate.heavy),mean(mutSpec$T_C.SubstRate.heavy),
mean(mutSpec$G_T.SubstRate.heavy),mean(mutSpec$G_C.SubstRate.heavy),mean(mutSpec$G_A.SubstRate.heavy),
mean(mutSpec$C_G.SubstRate.heavy),mean(mutSpec$C_T.SubstRate.heavy),mean(mutSpec$C_A.SubstRate.heavy)), names = c('Ah>Gh','Ah>Th','Ah>Ch','Th>Gh','Th>Ah','Th>Ch','Gh>Th','Gh>Ch','Gh>Ah','Ch>Gh','Ch>Th','Ch>Ah'), axis.cex=0.7)
barplot(c(mean(mutSpec$A_G.SubstRate.heavy),mean(mutSpec$A_T.SubstRate.heavy),mean(mutSpec$A_C.SubstRate.heavy),
mean(mutSpec$T_G.SubstRate.heavy),mean(mutSpec$T_A.SubstRate.heavy),mean(mutSpec$T_C.SubstRate.heavy),
mean(mutSpec$G_T.SubstRate.heavy),mean(mutSpec$G_C.SubstRate.heavy),mean(mutSpec$G_A.SubstRate.heavy),
mean(mutSpec$C_G.SubstRate.heavy),mean(mutSpec$C_T.SubstRate.heavy),mean(mutSpec$C_A.SubstRate.heavy)), names = c('Ah>Gh','Ah>Th','Ah>Ch','Th>Gh','Th>Ah','Th>Ch','Gh>Th','Gh>Ch','Gh>Ah','Ch>Gh','Ch>Th','Ch>Ah'), axis.cex=0.7)
barplot(c(mean(mutSpec$A_G.SubstRate.heavy),mean(mutSpec$A_T.SubstRate.heavy),mean(mutSpec$A_C.SubstRate.heavy),
mean(mutSpec$T_G.SubstRate.heavy),mean(mutSpec$T_A.SubstRate.heavy),mean(mutSpec$T_C.SubstRate.heavy),
mean(mutSpec$G_T.SubstRate.heavy),mean(mutSpec$G_C.SubstRate.heavy),mean(mutSpec$G_A.SubstRate.heavy),
mean(mutSpec$C_G.SubstRate.heavy),mean(mutSpec$C_T.SubstRate.heavy),mean(mutSpec$C_A.SubstRate.heavy)), names = c('Ah>Gh','Ah>Th','Ah>Ch','Th>Gh','Th>Ah','Th>Ch','Gh>Th','Gh>Ch','Gh>Ah','Ch>Gh','Ch>Th','Ch>Ah'), axe.cex=0.7)
barplot(c(mean(mutSpec$A_G.SubstRate.heavy),mean(mutSpec$A_T.SubstRate.heavy),mean(mutSpec$A_C.SubstRate.heavy),
mean(mutSpec$T_G.SubstRate.heavy),mean(mutSpec$T_A.SubstRate.heavy),mean(mutSpec$T_C.SubstRate.heavy),
mean(mutSpec$G_T.SubstRate.heavy),mean(mutSpec$G_C.SubstRate.heavy),mean(mutSpec$G_A.SubstRate.heavy),
mean(mutSpec$C_G.SubstRate.heavy),mean(mutSpec$C_T.SubstRate.heavy),mean(mutSpec$C_A.SubstRate.heavy)), names = c('Ah>Gh','Ah>Th','Ah>Ch','Th>Gh','Th>Ah','Th>Ch','Gh>Th','Gh>Ch','Gh>Ah','Ch>Gh','Ch>Th','Ch>Ah'), names.cex=0.7)
barplot(c(mean(mutSpec$A_G.SubstRate.heavy),mean(mutSpec$A_T.SubstRate.heavy),mean(mutSpec$A_C.SubstRate.heavy),
mean(mutSpec$T_G.SubstRate.heavy),mean(mutSpec$T_A.SubstRate.heavy),mean(mutSpec$T_C.SubstRate.heavy),
mean(mutSpec$G_T.SubstRate.heavy),mean(mutSpec$G_C.SubstRate.heavy),mean(mutSpec$G_A.SubstRate.heavy),
mean(mutSpec$C_G.SubstRate.heavy),mean(mutSpec$C_T.SubstRate.heavy),mean(mutSpec$C_A.SubstRate.heavy)), names = c('Ah>Gh','Ah>Th','Ah>Ch','Th>Gh','Th>Ah','Th>Ch','Gh>Th','Gh>Ch','Gh>Ah','Ch>Gh','Ch>Th','Ch>Ah'), cex=0.7)
barplot(c(mean(mutSpec$A_G.SubstRate.heavy),mean(mutSpec$A_T.SubstRate.heavy),mean(mutSpec$A_C.SubstRate.heavy),
mean(mutSpec$T_G.SubstRate.heavy),mean(mutSpec$T_A.SubstRate.heavy),mean(mutSpec$T_C.SubstRate.heavy),
mean(mutSpec$G_T.SubstRate.heavy),mean(mutSpec$G_C.SubstRate.heavy),mean(mutSpec$G_A.SubstRate.heavy),
mean(mutSpec$C_G.SubstRate.heavy),mean(mutSpec$C_T.SubstRate.heavy),mean(mutSpec$C_A.SubstRate.heavy)), names = c('Ah>Gh','Ah>Th','Ah>Ch','Th>Gh','Th>Ah','Th>Ch','Gh>Th','Gh>Ch','Gh>Ah','Ch>Gh','Ch>Th','Ch>Ah'), cex.names = 0.65)
mutSpec$TotalSubstRate.heavy = mutSpec$A_G.SubstRate.heavy + mutSpec$A_T.SubstRate.heavy + mutSpec$A_C.SubstRate.heavy
+ mutSpec$T_G.SubstRate.heavy + mutSpec$T_A.SubstRate.heavy + mutSpec$T_C.SubstRate.heavy
+ mutSpec$G_T.SubstRate.heavy + mutSpec$G_C.SubstRate.heavy + mutSpec$G_A.SubstRate.heavy
+ mutSpec$C_G.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy + mutSpec$C_A.SubstRate.heavy
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$temperature. method = 'spearman')
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$temperature, method = 'spearman')
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$NumberOfSeq, method = 'spearman') # a bit positive
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # nothing
cor.test(mutSpec$NumberOfSeq, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
cor.test(mutSpec$NumberOfSeq, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
cor.test(mutSpec$A>G_A.SubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
cor.test(mutSpec$A>G.SubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
cor.test(mutSpec$A_G.SubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
barplot(c(mean(mutSpec$A_G.SubstRate.heavy),mean(mutSpec$A_T.SubstRate.heavy),mean(mutSpec$A_C.SubstRate.heavy),
mean(mutSpec$T_G.SubstRate.heavy),mean(mutSpec$T_A.SubstRate.heavy),mean(mutSpec$T_C.SubstRate.heavy),
mean(mutSpec$G_T.SubstRate.heavy),mean(mutSpec$G_C.SubstRate.heavy),mean(mutSpec$G_A.SubstRate.heavy),
mean(mutSpec$C_G.SubstRate.heavy),mean(mutSpec$C_T.SubstRate.heavy),mean(mutSpec$C_A.SubstRate.heavy)), names = c('Ah>Gh','Ah>Th','Ah>Ch','Th>Gh','Th>Ah','Th>Ch','Gh>Th','Gh>Ch','Gh>Ah','Ch>Gh','Ch>Th','Ch>Ah'), cex.names = 0.65)
View(mutSpec)
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$NumberOfSeq, method = 'spearman') # nothing
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # nothing
cor.test(mutSpec$A_G.SubstRate.heavy, mutSpec$NumberOfSeq, method = 'spearman') # very positive
cor.test(mutSpec$C_T.SubstRate.heavy, mutSpec$NumberOfSeq, method = 'spearman') # no
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
cor.test(mutSpec$A_G.SubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
cor.test(mutSpec$C_T.SubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
cor.test(mutSpec$NumberOfSeq, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$NumberOfSeq, method = 'spearman') # no
cor.test(mutSpec$T_C.N,mutSpec$NumberOfSeq, method = 'spearman')      # Ah>Gh
A<-lm(mutSpec$T_C.N ~ scale(mutSpec$temperature) + scale(mutSpec$NumberOfSeq))
summary(A)
cor.test(mutSpec$T_C.N,mutSpec$NumOfFourFoldMut, method = 'spearman') # Ah>Gh
cor.test(mutSpec$T_C.N,mutSpec$NumberOfSeq, method = 'spearman')      # Ah>Gh
A<-lm(mutSpec$T_C.N ~ scale(mutSpec$temperature) + scale(mutSpec$NumOfFourFoldMut))
summary(A)
B<-lm(mutSpec$T_C.N ~ scale(mutSpec$temperature) + scale(mutSpec$NumberOfSeq))
summary(B)
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$A_G.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$C_T.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # positive
cor.test(mutSpec$T_C.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$G_A.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # nothing
mutSpec$TotalTransitionsSubstRate.heavy = mutSpec$A_G.SubstRate.heavy + mutSpec$G_A.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy +  mutSpec$T_C.SubstRate.heavy
cor.test(mutSpec$TotalTs.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
library(caper)
library(geiger)
library(ggplot2)
library(dplyr)
rm(list=ls(all=TRUE))
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpec = mutSpec[mutSpec$Class == 'Actinopterygii',]
mutSpec = mutSpec[mutSpec$Gene == 'CytB',]
summary(mutSpec$temperature)
mutSpec = mutSpec[!is.na(mutSpec$temperature),]
nrow(mutSpec)
cor.test(mutSpec$T_C.N,mutSpec$NumOfFourFoldMut, method = 'spearman') # Ah>Gh
cor.test(mutSpec$T_C.N,mutSpec$NumberOfSeq, method = 'spearman')      # Ah>Gh
A<-lm(mutSpec$T_C.N ~ scale(mutSpec$temperature) + scale(mutSpec$NumOfFourFoldMut))
summary(A)
B<-lm(mutSpec$T_C.N ~ scale(mutSpec$temperature) + scale(mutSpec$NumberOfSeq))
summary(B)
mutSpec$A_G.SubstRate.heavy = mutSpec$T_C/mutSpec$T
mutSpec$A_T.SubstRate.heavy = mutSpec$T_A/mutSpec$T
mutSpec$A_C.SubstRate.heavy = mutSpec$T_G/mutSpec$T
mutSpec$T_G.SubstRate.heavy = mutSpec$A_C/mutSpec$A
mutSpec$T_A.SubstRate.heavy = mutSpec$A_T/mutSpec$A
mutSpec$T_C.SubstRate.heavy = mutSpec$A_G/mutSpec$A
mutSpec$G_T.SubstRate.heavy = mutSpec$C_A/mutSpec$C
mutSpec$G_C.SubstRate.heavy = mutSpec$C_G/mutSpec$C
mutSpec$G_A.SubstRate.heavy = mutSpec$C_T/mutSpec$C
mutSpec$C_G.SubstRate.heavy = mutSpec$G_C/mutSpec$G
mutSpec$C_T.SubstRate.heavy = mutSpec$G_A/mutSpec$G
mutSpec$C_A.SubstRate.heavy = mutSpec$G_T/mutSpec$G
mutSpec$TotalSubstRate.heavy = mutSpec$A_G.SubstRate.heavy + mutSpec$A_T.SubstRate.heavy + mutSpec$A_C.SubstRate.heavy
+ mutSpec$T_G.SubstRate.heavy + mutSpec$T_A.SubstRate.heavy + mutSpec$T_C.SubstRate.heavy
+ mutSpec$G_T.SubstRate.heavy + mutSpec$G_C.SubstRate.heavy + mutSpec$G_A.SubstRate.heavy
+ mutSpec$C_G.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy + mutSpec$C_A.SubstRate.heavy
mutSpec$TotalTs.SubstRate.heavy = mutSpec$A_G.SubstRate.heavy + mutSpec$G_A.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy +  mutSpec$T_C.SubstRate.heavy
mutSpec$TotalTv.SubstRate.heavy = mutSpec$A_T.SubstRate.heavy + mutSpec$A_C.SubstRate.heavy + mutSpec$T_G.SubstRate.heavy + mutSpec$T_A.SubstRate.heavy + mutSpec$G_T.SubstRate.heavy + mutSpec$G_C.SubstRate.heavy + mutSpec$C_G.SubstRate.heavy + mutSpec$C_A.SubstRate.heavy
cor.test(mutSpec$TotalTs.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$TotalTv.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$TotalTs.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$TotalTv.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # about to be absent
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$A_G.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # positive
cor.test(mutSpec$C_T.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$T_C.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # nothing
cor.test(mutSpec$G_A.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
A<-lm(mutSpec$A_G.SubstRate.heavy ~ mutSpec$temperature + mutSpec$TotalSubstRate.heavy)
summary(A)
A<-lm(mutSpec$A_G.SubstRate.heavy ~ mutSpec$temperature); summary(A)
A<-lm(mutSpec$A_G.SubstRate.heavy/mutSpec$TotalSubstRate.heavy ~ mutSpec$temperature); summary(A)
B<-lm(mutSpec$C_T.SubstRate.heavy ~ mutSpec$temperature + mutSpec$TotalSubstRate.heavy); summary(B)
B<-lm(mutSpec$A_G.SubstRate.heavy ~ mutSpec$temperature); summary(B)
A<-lm(mutSpec$A_G.SubstRate.heavy ~ mutSpec$temperature); summary(A)
A<-lm(mutSpec$A_G.SubstRate.heavy ~ mutSpec$temperature); summary(A)
B<-lm(mutSpec$A_G.SubstRate.heavy ~ mutSpec$temperature); summary(B)
B<-lm(mutSpec$C_T.SubstRate.heavy ~ mutSpec$temperature); summary(B)
B<-lm(mutSpec$C_T.SubstRate.heavy/mutSpec$TotalSubstRate.heavy ~ mutSpec$temperature); summary(B)
B<-lm(mutSpec$C_T.SubstRate.heavy/mutSpec$TotalSubstRate.heavy ~ mutSpec$temperature); summary(B)
B<-lm(mutSpec$C_T.SubstRate.heavy/mutSpec$TotalSubstRate.heavy ~ mutSpec$temperature); summary(B)
library(caper)
library(geiger)
library(ggplot2)
library(dplyr)
rm(list=ls(all=TRUE))
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpec = mutSpec[mutSpec$Class == 'Actinopterygii',]
mutSpec = mutSpec[mutSpec$Gene == 'CytB',]
summary(mutSpec$temperature)
mutSpec = mutSpec[!is.na(mutSpec$temperature),]
nrow(mutSpec)
cor.test(mutSpec$T_C.N,mutSpec$NumOfFourFoldMut, method = 'spearman') # Ah>Gh
cor.test(mutSpec$T_C.N,mutSpec$NumberOfSeq, method = 'spearman')      # Ah>Gh
A<-lm(mutSpec$T_C.N ~ scale(mutSpec$temperature) + scale(mutSpec$NumOfFourFoldMut))
summary(A)
B<-lm(mutSpec$T_C.N ~ scale(mutSpec$temperature) + scale(mutSpec$NumberOfSeq))
summary(B)
mutSpec$A_G.SubstRate.heavy = mutSpec$T_C/mutSpec$T
mutSpec$A_T.SubstRate.heavy = mutSpec$T_A/mutSpec$T
mutSpec$A_C.SubstRate.heavy = mutSpec$T_G/mutSpec$T
mutSpec$T_G.SubstRate.heavy = mutSpec$A_C/mutSpec$A
mutSpec$T_A.SubstRate.heavy = mutSpec$A_T/mutSpec$A
mutSpec$T_C.SubstRate.heavy = mutSpec$A_G/mutSpec$A
mutSpec$G_T.SubstRate.heavy = mutSpec$C_A/mutSpec$C
mutSpec$G_C.SubstRate.heavy = mutSpec$C_G/mutSpec$C
mutSpec$G_A.SubstRate.heavy = mutSpec$C_T/mutSpec$C
mutSpec$C_G.SubstRate.heavy = mutSpec$G_C/mutSpec$G
mutSpec$C_T.SubstRate.heavy = mutSpec$G_A/mutSpec$G
mutSpec$C_A.SubstRate.heavy = mutSpec$G_T/mutSpec$G
mutSpec$TotalSubstRate.heavy = mutSpec$A_G.SubstRate.heavy + mutSpec$A_T.SubstRate.heavy + mutSpec$A_C.SubstRate.heavy
+ mutSpec$T_G.SubstRate.heavy + mutSpec$T_A.SubstRate.heavy + mutSpec$T_C.SubstRate.heavy
+ mutSpec$G_T.SubstRate.heavy + mutSpec$G_C.SubstRate.heavy + mutSpec$G_A.SubstRate.heavy
+ mutSpec$C_G.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy + mutSpec$C_A.SubstRate.heavy
mutSpec$TotalTs.SubstRate.heavy = mutSpec$A_G.SubstRate.heavy + mutSpec$G_A.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy +  mutSpec$T_C.SubstRate.heavy
mutSpec$TotalTv.SubstRate.heavy = mutSpec$A_T.SubstRate.heavy + mutSpec$A_C.SubstRate.heavy + mutSpec$T_G.SubstRate.heavy + mutSpec$T_A.SubstRate.heavy + mutSpec$G_T.SubstRate.heavy + mutSpec$G_C.SubstRate.heavy + mutSpec$C_G.SubstRate.heavy + mutSpec$C_A.SubstRate.heavy
## integral MutSpec looks good:
barplot(c(mean(mutSpec$A_G.SubstRate.heavy),mean(mutSpec$A_T.SubstRate.heavy),mean(mutSpec$A_C.SubstRate.heavy),
mean(mutSpec$T_G.SubstRate.heavy),mean(mutSpec$T_A.SubstRate.heavy),mean(mutSpec$T_C.SubstRate.heavy),
mean(mutSpec$G_T.SubstRate.heavy),mean(mutSpec$G_C.SubstRate.heavy),mean(mutSpec$G_A.SubstRate.heavy),
mean(mutSpec$C_G.SubstRate.heavy),mean(mutSpec$C_T.SubstRate.heavy),mean(mutSpec$C_A.SubstRate.heavy)), names = c('Ah>Gh','Ah>Th','Ah>Ch','Th>Gh','Th>Ah','Th>Ch','Gh>Th','Gh>Ch','Gh>Ah','Ch>Gh','Ch>Th','Ch>Ah'), cex.names = 0.65)
## if there is a correlation of substitution rates with the number of sequences? No, because normalization is OK now
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$NumberOfSeq, method = 'spearman') # no
cor.test(mutSpec$A_G.SubstRate.heavy, mutSpec$NumberOfSeq, method = 'spearman') # no
cor.test(mutSpec$C_T.SubstRate.heavy, mutSpec$NumberOfSeq, method = 'spearman') # no
## if there is a correlation between the  substitution rates and NumberOfFourFoldMut? Yes, sure
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
cor.test(mutSpec$A_G.SubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
cor.test(mutSpec$C_T.SubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
## total substitution rate - if there is correlation with temperature? yes. Warm water mutate faster in general and Ah>Gh is the best among them!?
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$A_G.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # positive
cor.test(mutSpec$C_T.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$T_C.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # nothing
cor.test(mutSpec$G_A.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$TotalTs.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$TotalTv.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # about to be absent
### A>G as a function of temperature and total number of substitutions
A<-lm(mutSpec$A_G.SubstRate.heavy ~ mutSpec$temperature + mutSpec$TotalSubstRate.heavy); summary(A)
A<-lm(mutSpec$A_G.SubstRate.heavy ~ mutSpec$temperature); summary(A)
A<-lm(mutSpec$A_G.SubstRate.heavy/mutSpec$TotalSubstRate.heavy ~ mutSpec$temperature); summary(A)
B<-lm(mutSpec$C_T.SubstRate.heavy ~ mutSpec$temperature + mutSpec$TotalSubstRate.heavy); summary(B)
B<-lm(mutSpec$C_T.SubstRate.heavy ~ mutSpec$temperature); summary(B)
B<-lm(mutSpec$C_T.SubstRate.heavy/mutSpec$TotalSubstRate.heavy ~ mutSpec$temperature); summary(B)
mutSpec$C_T.SubstRate.heavy/mutSpec$TotalSubstRate.heavy
mutSpec$A_G.SubstRate.heavy/mutSpec$TotalSubstRate.heavy
library(caper)
library(geiger)
library(ggplot2)
library(dplyr)
rm(list=ls(all=TRUE))
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpec = mutSpec[mutSpec$Class == 'Actinopterygii',]
mutSpec = mutSpec[mutSpec$Gene == 'CytB',]
summary(mutSpec$temperature)
mutSpec = mutSpec[!is.na(mutSpec$temperature),]
nrow(mutSpec)
cor.test(mutSpec$T_C.N,mutSpec$NumOfFourFoldMut, method = 'spearman') # Ah>Gh
cor.test(mutSpec$T_C.N,mutSpec$NumberOfSeq, method = 'spearman')      # Ah>Gh
A<-lm(mutSpec$T_C.N ~ scale(mutSpec$temperature) + scale(mutSpec$NumOfFourFoldMut))
summary(A)
B<-lm(mutSpec$T_C.N ~ scale(mutSpec$temperature) + scale(mutSpec$NumberOfSeq))
summary(B)
mutSpec$A_G.SubstRate.heavy = mutSpec$T_C/mutSpec$T
mutSpec$A_T.SubstRate.heavy = mutSpec$T_A/mutSpec$T
mutSpec$A_C.SubstRate.heavy = mutSpec$T_G/mutSpec$T
mutSpec$T_G.SubstRate.heavy = mutSpec$A_C/mutSpec$A
mutSpec$T_A.SubstRate.heavy = mutSpec$A_T/mutSpec$A
mutSpec$T_C.SubstRate.heavy = mutSpec$A_G/mutSpec$A
mutSpec$G_T.SubstRate.heavy = mutSpec$C_A/mutSpec$C
mutSpec$G_C.SubstRate.heavy = mutSpec$C_G/mutSpec$C
mutSpec$G_A.SubstRate.heavy = mutSpec$C_T/mutSpec$C
mutSpec$C_G.SubstRate.heavy = mutSpec$G_C/mutSpec$G
mutSpec$C_T.SubstRate.heavy = mutSpec$G_A/mutSpec$G
mutSpec$C_A.SubstRate.heavy = mutSpec$G_T/mutSpec$G
mutSpec$TotalSubstRate.heavy = mutSpec$A_G.SubstRate.heavy + mutSpec$A_T.SubstRate.heavy + mutSpec$A_C.SubstRate.heavy
+ mutSpec$T_G.SubstRate.heavy + mutSpec$T_A.SubstRate.heavy + mutSpec$T_C.SubstRate.heavy
+ mutSpec$G_T.SubstRate.heavy + mutSpec$G_C.SubstRate.heavy + mutSpec$G_A.SubstRate.heavy
+ mutSpec$C_G.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy + mutSpec$C_A.SubstRate.heavy
mutSpec$TotalTs.SubstRate.heavy = mutSpec$A_G.SubstRate.heavy + mutSpec$G_A.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy +  mutSpec$T_C.SubstRate.heavy
mutSpec$TotalTv.SubstRate.heavy = mutSpec$A_T.SubstRate.heavy + mutSpec$A_C.SubstRate.heavy + mutSpec$T_G.SubstRate.heavy + mutSpec$T_A.SubstRate.heavy + mutSpec$G_T.SubstRate.heavy + mutSpec$G_C.SubstRate.heavy + mutSpec$C_G.SubstRate.heavy + mutSpec$C_A.SubstRate.heavy
library(caper)
library(geiger)
library(ggplot2)
library(dplyr)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy + mutSpec$TotalSubstRate.heavy); summary(C)
library(caper)
library(geiger)
library(ggplot2)
library(dplyr)
rm(list=ls(all=TRUE))
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpec = mutSpec[mutSpec$Class == 'Actinopterygii',]
mutSpec = mutSpec[mutSpec$Gene == 'CytB',]
summary(mutSpec$temperature)
mutSpec = mutSpec[!is.na(mutSpec$temperature),]
nrow(mutSpec)
cor.test(mutSpec$T_C.N,mutSpec$NumOfFourFoldMut, method = 'spearman') # Ah>Gh
cor.test(mutSpec$T_C.N,mutSpec$NumberOfSeq, method = 'spearman')      # Ah>Gh
A<-lm(mutSpec$T_C.N ~ scale(mutSpec$temperature) + scale(mutSpec$NumOfFourFoldMut))
summary(A)
B<-lm(mutSpec$T_C.N ~ scale(mutSpec$temperature) + scale(mutSpec$NumberOfSeq))
summary(B)
mutSpec$A_G.SubstRate.heavy = mutSpec$T_C/mutSpec$T
mutSpec$A_T.SubstRate.heavy = mutSpec$T_A/mutSpec$T
mutSpec$A_C.SubstRate.heavy = mutSpec$T_G/mutSpec$T
mutSpec$T_G.SubstRate.heavy = mutSpec$A_C/mutSpec$A
mutSpec$T_A.SubstRate.heavy = mutSpec$A_T/mutSpec$A
mutSpec$T_C.SubstRate.heavy = mutSpec$A_G/mutSpec$A
mutSpec$G_T.SubstRate.heavy = mutSpec$C_A/mutSpec$C
mutSpec$G_C.SubstRate.heavy = mutSpec$C_G/mutSpec$C
mutSpec$G_A.SubstRate.heavy = mutSpec$C_T/mutSpec$C
mutSpec$C_G.SubstRate.heavy = mutSpec$G_C/mutSpec$G
mutSpec$C_T.SubstRate.heavy = mutSpec$G_A/mutSpec$G
mutSpec$C_A.SubstRate.heavy = mutSpec$G_T/mutSpec$G
mutSpec$TotalSubstRate.heavy = mutSpec$A_G.SubstRate.heavy + mutSpec$A_T.SubstRate.heavy + mutSpec$A_C.SubstRate.heavy
+ mutSpec$T_G.SubstRate.heavy + mutSpec$T_A.SubstRate.heavy + mutSpec$T_C.SubstRate.heavy
+ mutSpec$G_T.SubstRate.heavy + mutSpec$G_C.SubstRate.heavy + mutSpec$G_A.SubstRate.heavy
+ mutSpec$C_G.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy + mutSpec$C_A.SubstRate.heavy
mutSpec$TotalTs.SubstRate.heavy = mutSpec$A_G.SubstRate.heavy + mutSpec$G_A.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy +  mutSpec$T_C.SubstRate.heavy
mutSpec$TotalTv.SubstRate.heavy = mutSpec$A_T.SubstRate.heavy + mutSpec$A_C.SubstRate.heavy + mutSpec$T_G.SubstRate.heavy + mutSpec$T_A.SubstRate.heavy + mutSpec$G_T.SubstRate.heavy + mutSpec$G_C.SubstRate.heavy + mutSpec$C_G.SubstRate.heavy + mutSpec$C_A.SubstRate.heavy
## integral MutSpec looks good:
barplot(c(mean(mutSpec$A_G.SubstRate.heavy),mean(mutSpec$A_T.SubstRate.heavy),mean(mutSpec$A_C.SubstRate.heavy),
mean(mutSpec$T_G.SubstRate.heavy),mean(mutSpec$T_A.SubstRate.heavy),mean(mutSpec$T_C.SubstRate.heavy),
mean(mutSpec$G_T.SubstRate.heavy),mean(mutSpec$G_C.SubstRate.heavy),mean(mutSpec$G_A.SubstRate.heavy),
mean(mutSpec$C_G.SubstRate.heavy),mean(mutSpec$C_T.SubstRate.heavy),mean(mutSpec$C_A.SubstRate.heavy)), names = c('Ah>Gh','Ah>Th','Ah>Ch','Th>Gh','Th>Ah','Th>Ch','Gh>Th','Gh>Ch','Gh>Ah','Ch>Gh','Ch>Th','Ch>Ah'), cex.names = 0.65)
## if there is a correlation of substitution rates with the number of sequences? No, because normalization is OK now
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$NumberOfSeq, method = 'spearman') # no
cor.test(mutSpec$A_G.SubstRate.heavy, mutSpec$NumberOfSeq, method = 'spearman') # no
cor.test(mutSpec$C_T.SubstRate.heavy, mutSpec$NumberOfSeq, method = 'spearman') # no
## if there is a correlation between the  substitution rates and NumberOfFourFoldMut? Yes, sure
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
cor.test(mutSpec$A_G.SubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
cor.test(mutSpec$C_T.SubstRate.heavy, mutSpec$NumOfFourFoldMut, method = 'spearman') # very positive
## total substitution rate - if there is correlation with temperature? yes. Warm water mutate faster in general and Ah>Gh is the best among them!?
cor.test(mutSpec$TotalSubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$A_G.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # positive
cor.test(mutSpec$C_T.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$T_C.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # nothing
cor.test(mutSpec$G_A.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$TotalTs.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # a bit positive
cor.test(mutSpec$TotalTv.SubstRate.heavy, mutSpec$temperature, method = 'spearman') # about to be absent
### A>G as a function of temperature and total number of substitutions
A<-lm(mutSpec$A_G.SubstRate.heavy ~ mutSpec$temperature + mutSpec$TotalSubstRate.heavy); summary(A)
A<-lm(mutSpec$A_G.SubstRate.heavy ~ mutSpec$temperature); summary(A)
A<-lm(mutSpec$A_G.SubstRate.heavy/mutSpec$TotalSubstRate.heavy ~ mutSpec$temperature); summary(A)
B<-lm(mutSpec$C_T.SubstRate.heavy ~ mutSpec$temperature + mutSpec$TotalSubstRate.heavy); summary(B)
B<-lm(mutSpec$C_T.SubstRate.heavy ~ mutSpec$temperature); summary(B)
# B<-lm(mutSpec$C_T.SubstRate.heavy/mutSpec$TotalSubstRate.heavy ~ mutSpec$temperature); summary(B) # Inf sometimes...
###
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy + mutSpec$TotalSubstRate.heavy); summary(C)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy); summary(C)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy + mutSpec$TotalSubstRate.heavy); summary(C)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy + mutSpec$TotalSubstRate.heavy); summary(C)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy + mutSpec$TotalSubstRate.heavy); summary(C)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy); summary(C)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy + mutSpec$TotalSubstRate.heavy + mutSpec$TotalTs.SubstRate.heavy + mutSpec$TotalTv.SubstRate.heavy); summary(C)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy + mutSpec$TotalSubstRate.heavy + mutSpec$TotalTs.SubstRate.heavy); summary(C)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy + mutSpec$TotalSubstRate.heavy + mutSpec$TotalTs.SubstRate.heavy + mutSpec$TotalTv.SubstRate.heavy); summary(C)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy + mutSpec$TotalTs.SubstRate.heavy + mutSpec$TotalTv.SubstRate.heavy); summary(C)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy + mutSpec$C_T.SubstRate.heavy + mutSpec$TotalTs.SubstRate.heavy); summary(C)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy + mutSpec$TotalTs.SubstRate.heavy); summary(C)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy); summary(C)
C<-lm(mutSpec$temperature ~ mutSpec$A_G.SubstRate.heavy/mutSpec$T_C.SubstRate.heavy); summary(C)
