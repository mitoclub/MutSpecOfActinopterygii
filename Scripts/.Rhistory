table(ALLDIV[!is.na(ALLDIV$AGdivTC),]$Class)
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(ALL[ALL$Class %in% colder,]$A_G, ALL[ALL$Class %in% warmer,]$A_G.SubstRate.heavy, paired=F)
wilcox.test(ALLDIV[ALLDIV$Class %in% colder,]$AGdivTC, ALLDIV[ALLDIV$Class %in% warmer,]$AGdivTC, paired=F)
wilcox.test(ALL[ALL$Class %in% colder,]$Temperature, ALL[ALL$Class %in% warmer,]$Temperature, paired=F)
wilcox.test(ALL[ALL$Class %in% colder,]$FrTheavy, ALL[ALL$Class %in% warmer,]$Temperature, paired=F)
wilcox.test(ALL[ALL$Class %in% colder,]$FrCheavy, ALL[ALL$Class %in% warmer,]$Temperature, paired=F)
wilcox.test(ALL[ALL$Class %in% colder,]$FrAheavy, ALL[ALL$Class %in% warmer,]$Temperature, paired=F)
wilcox.test(ALL[ALL$Class %in% colder,]$FrGheavy, ALL[ALL$Class %in% warmer,]$Temperature, paired=F)
ALL[ALL$Class %in% colder,]$FrGheavy
wilcox.test(ALL[ALL$Class %in% colder,]$FrAheavy, ALL[ALL$Class %in% warmer,]$Temperature, paired=F)
wilcox.test(ALL[ALL$Class %in% colder,]$FrGheavy, ALL[ALL$Class %in% warmer,]$Temperature, paired=F)
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(ALL[ALL$Class %in% colder,]$A_G, ALL[ALL$Class %in% warmer,]$A_G.SubstRate.heavy, paired=F)
wilcox.test(ALLDIV[ALLDIV$Class %in% colder,]$AGdivTC, ALLDIV[ALLDIV$Class %in% warmer,]$AGdivTC, paired=F)
wilcox.test(ALL[ALL$Class %in% colder,]$Temperature, ALL[ALL$Class %in% warmer,]$Temperature, paired=F)
wilcox.test(ALL[ALL$Class %in% colder,]$FrTheavy, ALL[ALL$Class %in% warmer,]$FrTheavy, paired=F)
wilcox.test(ALL[ALL$Class %in% colder,]$FrCheavy, ALL[ALL$Class %in% warmer,]$FrCheavy, paired=F)
wilcox.test(ALL[ALL$Class %in% colder,]$FrAheavy, ALL[ALL$Class %in% warmer,]$FrAheavy, paired=F)
wilcox.test(ALL[ALL$Class %in% colder,]$FrGheavy, ALL[ALL$Class %in% warmer,]$FrGheavy, paired=F)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
AllSynNuc = read.table("../data/1raw/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
AllSynNuc = AllSynNuc[AllSynNuc$Gene != 'ND6',]
AllSynNuc = aggregate(list(AllSynNuc$NeutralA,AllSynNuc$NeutralT,AllSynNuc$NeutralG,AllSynNuc$NeutralC), by = list(AllSynNuc$Species), FUN = sum)
names(AllSynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
AllSynNuc$FrT.heavy = AllSynNuc$NeutralA / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrA.heavy = AllSynNuc$NeutralT / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrC.heavy = AllSynNuc$NeutralG / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrG.heavy = AllSynNuc$NeutralC / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
matur = read.table('../Data/1raw/FishBaseMaturity_Tm.txt', header=T)
matur = matur %>% group_by(Species) %>% summarise(matur_tm = median(Tm))
AllSynNuc = merge(AllSynNuc, tm, by='Species', all.x=T)
AllSynNuc = merge(AllSynNuc, matur, by='Species', all.x=T)
nrow(AllSynNuc[!is.na(AllSynNuc$FrA.heavy) & !is.na(AllSynNuc$temperature),])
cor.test(AllSynNuc$temperature,AllSynNuc$FrA.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrT.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrG.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrC.heavy, method = "spearman")
nrow(AllSynNuc[!is.na(AllSynNuc$FrA.heavy) & !is.na(AllSynNuc$matur_tm),])
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrA.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrT.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrG.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrC.heavy, method = "spearman")
AllSynNuc$TtoCSkew.heavy = (AllSynNuc$FrT.heavy-AllSynNuc$FrC.heavy)/(AllSynNuc$FrT.heavy+AllSynNuc$FrC.heavy)
AllSynNuc$GtoASkew.heavy = (AllSynNuc$FrG.heavy-AllSynNuc$FrA.heavy)/(AllSynNuc$FrG.heavy+AllSynNuc$FrA.heavy)
nrow(AllSynNuc[!is.na(AllSynNuc$GtoASkew.heavy) & !is.na(AllSynNuc$temperature),])
cor.test(AllSynNuc$temperature,AllSynNuc$TtoCSkew.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$GtoASkew.heavy, method = "spearman")
nrow(AllSynNuc[!is.na(AllSynNuc$GtoASkew.heavy) & !is.na(AllSynNuc$matur_tm),])
cor.test(AllSynNuc$matur_tm,AllSynNuc$TtoCSkew.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$GtoASkew.heavy, method = "spearman")
AllSynNuc$TG = AllSynNuc$FrT.heavy+AllSynNuc$FrG.heavy
AllSynNuc$AC = AllSynNuc$FrA.heavy+AllSynNuc$FrC.heavy
AllSynNuc$TG_ACSkew.heavy = (AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC)
AllSynNuc = AllSynNuc[!is.na(AllSynNuc$temperature),]; N = as.character(paste("N", nrow(AllSynNuc), sep="")) #delete NA
pdf("../Figures/WholeGenomeData.Actinopterygii.pdf")
f1= ggscatter(AllSynNuc, x = "temperature", y = "FrA.heavy",
color = "#e61a0b", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of AH")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1
f2=ggscatter(AllSynNuc, x = "temperature", y = "FrC.heavy",
color = "#009414", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of CH")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f2
f3=ggscatter(AllSynNuc, x = "temperature", y = "FrG.heavy",
color = "#5c5c5c", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of GH")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f3
f4=ggscatter(AllSynNuc, x = "temperature", y = "FrT.heavy",
color = "#0918e6", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of TH")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f4
dev.off()
f1
f2
f3
f4
pdf("../Figures/WholeGenomeData.Actinopterygii.GAskew.pdf", width = 7, height = 8.5)
f5=ggscatter(AllSynNuc, x = "temperature", y = "GASkew.heavy",
color = "#c99bc9", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Mean annual water temperature, ?C",  ylim=c(0.1, 0.65), xlim=c(0,30))+stat_cor(method = "spearman", label.x = 2.5, label.y = 0.64, aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f5
pdf("../Figures/WholeGenomeData.Actinopterygii.GAskew.pdf", width = 7, height = 8.5)
f5=ggscatter(AllSynNuc, x = "temperature", y = "GtoASkew.heavy",
color = "#c99bc9", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Mean annual water temperature, ?C",  ylim=c(0.1, 0.65), xlim=c(0,30))+stat_cor(method = "spearman", label.x = 2.5, label.y = 0.64, aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f5
dev.off()
f5
rm(list=ls(all=TRUE))
library(ggplot2)
MUT = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
taxa = read.table("../Data/1raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
taxa = as.data.frame(taxa[grepl('Actinopteri',taxa$V1),])
names(taxa) = 'taxa'
taxa$Species = gsub(";(.*)",'',taxa$taxa);
taxa$Species = gsub(" ",'_',taxa$Species);
taxa$Family = gsub(";Actinopteri(.*)",'',taxa$taxa)
taxa$Family = gsub("(.*);",'',taxa$Family)
table(taxa$Family) ### some species with freq of families > 3
length(unique(taxa$Family)) ### 43 Families
taxa = taxa[,-1]
### merge Taxa with Temp and MutSpec
finaldf = merge(MUT, taxa, by = 'Species')
nrow(finaldf) # 110 sps with all inf
for (i in 1:nrow(finaldf))   {  finaldf$FamilyShort[i] = paste(unlist(strsplit(finaldf$Family[i],''))[c(1:3)],collapse = '')  } # make Short names
table(finaldf$Family)
length(unique(finaldf$Family))# 30 families
FamFreq = data.frame(table(finaldf$Family));
FrequentFamilies = FamFreq[FamFreq$Freq >= 3,]$Var1; length(FrequentFamilies) # delete families, that have less than 3 species!!!
FamFreq = FamFreq[FamFreq$Var1 %in% FrequentFamilies,]
names(FamFreq)=c('Family','NumberOfSpecies')
Fishes = finaldf[finaldf$Family %in% FrequentFamilies,]
Fishes$TsTv = (Fishes$T_C + Fishes$C_T + Fishes$G_A + Fishes$A_G) / (Fishes$T_A + Fishes$A_T + Fishes$G_C + Fishes$C_G + Fishes$G_T + Fishes$T_G + Fishes$C_A + Fishes$A_C)
ggplot(data = Fishes, aes(x = Temperature, y = A_G.T_C, group = FamilyShort, fill = FamilyShort))+
geom_boxplot(alpha=0.3)+
theme_classic()+
labs(x = 'Temperature, Â°C', y = 'A>G/T>C')
rm(list=ls(all=TRUE))
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
boxplot(Fishes[Fishes$temperature<=quantile(Fishes$temperature,0.5),]$A_G.T_C,
Fishes[Fishes$temperature>quantile(Fishes$temperature,0.5),]$A_G.T_C,
names=c('colder fishes','warmer fishes'), outline = FALSE, notch = TRUE, cex = 3, ylab = 'A>G/T>C')
rm(list=ls(all=TRUE))
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
rm(list=ls(all=TRUE))
library(dplyr)
library(tidyr)
library(knitr)
#library(kableExtra)
library(ggplot2)
ggplot(data = fishes_matur, aes(x = Temp, y = TG_ACSkew))+
geom_boxplot()+
facet_wrap(~Maturated)+
theme_test()+
labs(y = 'TGh-ACh skew')
rm(list=ls(all=TRUE))
library(dplyr)
library(tidyr)
library(knitr)
#library(kableExtra)
library(ggplot2)
muttemp = read.table('../data/3results/VertebratePolymorphisms.MutSpecData.txt', header=T)
taxa = read.table("../data/1raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
taxa = as.data.frame(taxa[grepl('Actinopteri',taxa$V1),])
names(taxa) = 'taxa'
taxa$Species = gsub(";(.*)",'',taxa$taxa);
taxa$Species = gsub(" ",'_',taxa$Species);
taxa$Family = gsub(";Actinopteri(.*)",'',taxa$taxa)
taxa$Family = gsub("(.*);",'',taxa$Family)
taxa = taxa[,-1]
Fishes = merge(muttemp, taxa, by = 'Species')
for (i in 1:nrow(Fishes))   {Fishes$FamilyShort[i] = paste(unlist(strsplit(Fishes$Family[i],''))[c(1:3)],collapse = '') }
Fishes = Fishes[!is.na(Fishes$temperature),]
Fishes$TsTv = (Fishes$T_C.SubstRate.heavy + Fishes$C_T.SubstRate.heavy + Fishes$G_A.SubstRate.heavy + Fishes$A_G.SubstRate.heavy) /
(Fishes$T_A.SubstRate.heavy + Fishes$A_T.SubstRate.heavy + Fishes$G_C.SubstRate.heavy + Fishes$C_G.SubstRate.heavy +
Fishes$G_T.SubstRate.heavy + Fishes$T_G.SubstRate.heavy + Fishes$C_A.SubstRate.heavy + Fishes$A_C.SubstRate.heavy)
FamFreq = data.frame(table(Fishes$Family))
FrequentFamilies = FamFreq[FamFreq$Freq > 3,]$Var1
FamFreq = FamFreq[FamFreq$Var1 %in% FrequentFamilies,]
names(FamFreq)=c('Family','NumberOfSpecies')
Fishes = Fishes[Fishes$Family %in% FrequentFamilies,]
Fishes$A_G.T_C.heavy = (Fishes$A_G.heavy/Fishes$T_C.heavy)
Fishes = Fishes[Fishes$A_G.T_C.heavy > 0,]
Fishes = Fishes[Fishes$A_G.T_C.heavy < Inf,]
Fishes = Fishes[Fishes$TsTv < Inf,]
Fishes = Fishes[!is.na(Fishes$A_G.T_C.heavy),]
agg = aggregate(list(Fishes$TsTv, Fishes$A_G.T_C.heavy, Fishes$temperature), by = list(Fishes$Family), FUN = median)
names(agg) = c('Family','TsTv','A_G.T_C','Temperature')
for (i in 1:nrow(agg))   {agg$FamilyShort[i] = paste(unlist(strsplit(agg$Family[i],''))[c(1:3)],collapse = '')  }
cor.test(agg$A_G.T_C, agg$Temperature,method = 'spearman')
ggplot(data = agg, aes(x = Temperature, y = A_G.T_C, label = FamilyShort, color = Family))+
geom_point()+
geom_smooth(method="lm", se=F, col = 'red')+
theme_classic()+
labs(x = 'Median annual water temperature, °C', y = 'Median A>G/T>C')+
geom_text(aes(label=FamilyShort),hjust=-0.15, vjust=-0.5, show.legend = F)
ggplot(data = Fishes, aes(x = temperature, y = A_G.T_C.heavy, group = FamilyShort, fill = FamilyShort))+
geom_boxplot(alpha=0.3)+
theme_classic()+
labs(x = 'Temperature, C°', y = 'A>G/T>C')
boxplot(Fishes[Fishes$temperature<=quantile(Fishes$temperature,0.25),]$A_G.T_C,
Fishes[Fishes$temperature>quantile(Fishes$temperature,0.25) & Fishes$temperature<=quantile(Fishes$temperature,0.5),]$A_G.T_C,
Fishes[Fishes$temperature>quantile(Fishes$temperature,0.5) & Fishes$temperature<=quantile(Fishes$temperature,0.75),]$A_G.T_C,
Fishes[Fishes$temperature>quantile(Fishes$temperature,0.75),]$A_G.T_C,
names=c('1','2','3','4'), outline = FALSE, notch = FALSE, ylab = 'A>G/T>C', xlab = 'Quartiles of median annual water temperature, C')
boxplot(Fishes[Fishes$temperature<=quantile(Fishes$temperature,0.5),]$A_G.T_C,
Fishes[Fishes$temperature>quantile(Fishes$temperature,0.5),]$A_G.T_C,
names=c('colder fishes','warmer fishes'), outline = FALSE, notch = TRUE, cex = 3, ylab = 'A>G/T>C')
fishes_matur = muttemp[!is.na(muttemp$matur_tm),]
fishes_matur = fishes_matur[!is.na(fishes_matur$temperature),]
fishes_matur$CtoTSkew = (fishes_matur$FrC.heavy-fishes_matur$FrT.heavy)/(fishes_matur$FrC.heavy+fishes_matur$FrT.heavy)
fishes_matur$GtoASkew = (fishes_matur$FrG.heavy-fishes_matur$FrA.heavy)/(fishes_matur$FrG.heavy+fishes_matur$FrA.heavy)
fishes_matur$AtoGSkew = (fishes_matur$FrA.heavy-fishes_matur$FrG.heavy)/(fishes_matur$FrA.heavy+fishes_matur$FrG.heavy)
fishes_matur$TtoCSkew = (fishes_matur$FrT.heavy-fishes_matur$FrC.heavy)/(fishes_matur$FrT.heavy+fishes_matur$FrC.heavy)
fishes_matur$TG = fishes_matur$FrT.heavy+fishes_matur$FrG.heavy
fishes_matur$AC = fishes_matur$FrA.heavy+fishes_matur$FrC.heavy
fishes_matur$TG_ACSkew = (fishes_matur$TG-fishes_matur$AC)/(fishes_matur$TG+fishes_matur$AC)
fishes_matur$AC_TGSkew = -(fishes_matur$TG-fishes_matur$AC)/(fishes_matur$TG+fishes_matur$AC)
medmatur = median(fishes_matur$matur_tm)
mmm = function(x)
{
if (x < medmatur) {return('Short Maturated')}
else{return('Long Maturated')}
}
fishes_matur$Maturated = apply(as.matrix(fishes_matur$matur_tm),1,mmm)
m_temp_s = median(fishes_matur[fishes_matur$Maturated == 'Short Maturated',]$temperature)
m_temp_l = median(fishes_matur[fishes_matur$Maturated == 'Long Maturated',]$temperature)
for (i in 1:nrow(fishes_matur))
{
if (fishes_matur$Maturated[i] == 'Short Maturated')
{
if (fishes_matur$temperature[i] <= m_temp_s) {fishes_matur$Temp[i] = 'Colder Fishes'}
else {fishes_matur$Temp[i] = 'Warmer Fishes'}
}
else if (fishes_matur$Maturated[i] == 'Long Maturated')
{
if (fishes_matur$temperature[i] <= m_temp_l) {fishes_matur$Temp[i] = 'Colder Fishes'}
else {fishes_matur$Temp[i] = 'Warmer Fishes'}
}
}
ggplot(data = fishes_matur, aes(x = Temp, y = TG_ACSkew))+
geom_boxplot()+
facet_wrap(~Maturated)+
theme_test()+
labs(y = 'TGh-ACh skew')
ggplot(data = fishes_matur, aes(x = Temp, y = GtoASkew ))+
geom_boxplot()+
facet_wrap(~Maturated)+
theme_test()+
labs(y = 'TGh-ACh skew')
ggplot(data = fishes_matur, aes(x = Temp, y = GtoASkew ))+
geom_boxplot()+
facet_wrap(~Maturated)+
theme_test()+
labs(y = 'GAskew ')
install.packages("kableExtra")
rm(list=ls(all=TRUE))
install.packages("kableExtra")
library(dplyr)
library(tidyr)
library(knitr)
library(kableExtra)
library(ggplot2)
muttemp = read.table('../data/3results/VertebratePolymorphisms.MutSpecData.txt', header=T)
taxa = read.table("../data/1raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
taxa = as.data.frame(taxa[grepl('Actinopteri',taxa$V1),])
names(taxa) = 'taxa'
taxa$Species = gsub(";(.*)",'',taxa$taxa);
taxa$Species = gsub(" ",'_',taxa$Species);
taxa$Family = gsub(";Actinopteri(.*)",'',taxa$taxa)
taxa$Family = gsub("(.*);",'',taxa$Family)
taxa = taxa[,-1]
Fishes = merge(muttemp, taxa, by = 'Species')
for (i in 1:nrow(Fishes))   {Fishes$FamilyShort[i] = paste(unlist(strsplit(Fishes$Family[i],''))[c(1:3)],collapse = '') }
Fishes = Fishes[!is.na(Fishes$temperature),]
Fishes$TsTv = (Fishes$T_C.SubstRate.heavy + Fishes$C_T.SubstRate.heavy + Fishes$G_A.SubstRate.heavy + Fishes$A_G.SubstRate.heavy) /
(Fishes$T_A.SubstRate.heavy + Fishes$A_T.SubstRate.heavy + Fishes$G_C.SubstRate.heavy + Fishes$C_G.SubstRate.heavy +
Fishes$G_T.SubstRate.heavy + Fishes$T_G.SubstRate.heavy + Fishes$C_A.SubstRate.heavy + Fishes$A_C.SubstRate.heavy)
FamFreq = data.frame(table(Fishes$Family))
FrequentFamilies = FamFreq[FamFreq$Freq > 3,]$Var1
FamFreq = FamFreq[FamFreq$Var1 %in% FrequentFamilies,]
names(FamFreq)=c('Family','NumberOfSpecies')
Fishes = Fishes[Fishes$Family %in% FrequentFamilies,]
Fishes$A_G.T_C.heavy = (Fishes$A_G.heavy/Fishes$T_C.heavy)
Fishes = Fishes[Fishes$A_G.T_C.heavy > 0,]
Fishes = Fishes[Fishes$A_G.T_C.heavy < Inf,]
Fishes = Fishes[Fishes$TsTv < Inf,]
Fishes = Fishes[!is.na(Fishes$A_G.T_C.heavy),]
agg = aggregate(list(Fishes$TsTv, Fishes$A_G.T_C.heavy, Fishes$temperature), by = list(Fishes$Family), FUN = median)
names(agg) = c('Family','TsTv','A_G.T_C','Temperature')
for (i in 1:nrow(agg))   {agg$FamilyShort[i] = paste(unlist(strsplit(agg$Family[i],''))[c(1:3)],collapse = '')  }
cor.test(agg$A_G.T_C, agg$Temperature,method = 'spearman')
ggplot(data = agg, aes(x = Temperature, y = A_G.T_C, label = FamilyShort, color = Family))+
geom_point()+
geom_smooth(method="lm", se=F, col = 'red')+
theme_classic()+
labs(x = 'Median annual water temperature, °C', y = 'Median A>G/T>C')+
geom_text(aes(label=FamilyShort),hjust=-0.15, vjust=-0.5, show.legend = F)
ggplot(data = Fishes, aes(x = temperature, y = A_G.T_C.heavy, group = FamilyShort, fill = FamilyShort))+
geom_boxplot(alpha=0.3)+
theme_classic()+
labs(x = 'Temperature, C°', y = 'A>G/T>C')
boxplot(Fishes[Fishes$temperature<=quantile(Fishes$temperature,0.25),]$A_G.T_C,
Fishes[Fishes$temperature>quantile(Fishes$temperature,0.25) & Fishes$temperature<=quantile(Fishes$temperature,0.5),]$A_G.T_C,
Fishes[Fishes$temperature>quantile(Fishes$temperature,0.5) & Fishes$temperature<=quantile(Fishes$temperature,0.75),]$A_G.T_C,
Fishes[Fishes$temperature>quantile(Fishes$temperature,0.75),]$A_G.T_C,
names=c('1','2','3','4'), outline = FALSE, notch = FALSE, ylab = 'A>G/T>C', xlab = 'Quartiles of median annual water temperature, C')
boxplot(Fishes[Fishes$temperature<=quantile(Fishes$temperature,0.5),]$A_G.T_C,
Fishes[Fishes$temperature>quantile(Fishes$temperature,0.5),]$A_G.T_C,
names=c('colder fishes','warmer fishes'), outline = FALSE, notch = TRUE, cex = 3, ylab = 'A>G/T>C')
fishes_matur = muttemp[!is.na(muttemp$matur_tm),]
fishes_matur = fishes_matur[!is.na(fishes_matur$temperature),]
fishes_matur$CtoTSkew = (fishes_matur$FrC.heavy-fishes_matur$FrT.heavy)/(fishes_matur$FrC.heavy+fishes_matur$FrT.heavy)
fishes_matur$GtoASkew = (fishes_matur$FrG.heavy-fishes_matur$FrA.heavy)/(fishes_matur$FrG.heavy+fishes_matur$FrA.heavy)
fishes_matur$AtoGSkew = (fishes_matur$FrA.heavy-fishes_matur$FrG.heavy)/(fishes_matur$FrA.heavy+fishes_matur$FrG.heavy)
fishes_matur$TtoCSkew = (fishes_matur$FrT.heavy-fishes_matur$FrC.heavy)/(fishes_matur$FrT.heavy+fishes_matur$FrC.heavy)
fishes_matur$TG = fishes_matur$FrT.heavy+fishes_matur$FrG.heavy
fishes_matur$AC = fishes_matur$FrA.heavy+fishes_matur$FrC.heavy
fishes_matur$TG_ACSkew = (fishes_matur$TG-fishes_matur$AC)/(fishes_matur$TG+fishes_matur$AC)
fishes_matur$AC_TGSkew = -(fishes_matur$TG-fishes_matur$AC)/(fishes_matur$TG+fishes_matur$AC)
medmatur = median(fishes_matur$matur_tm)
mmm = function(x)
{
if (x < medmatur) {return('Short Maturated')}
else{return('Long Maturated')}
}
fishes_matur$Maturated = apply(as.matrix(fishes_matur$matur_tm),1,mmm)
m_temp_s = median(fishes_matur[fishes_matur$Maturated == 'Short Maturated',]$temperature)
m_temp_l = median(fishes_matur[fishes_matur$Maturated == 'Long Maturated',]$temperature)
for (i in 1:nrow(fishes_matur))
{
if (fishes_matur$Maturated[i] == 'Short Maturated')
{
if (fishes_matur$temperature[i] <= m_temp_s) {fishes_matur$Temp[i] = 'Colder Fishes'}
else {fishes_matur$Temp[i] = 'Warmer Fishes'}
}
else if (fishes_matur$Maturated[i] == 'Long Maturated')
{
if (fishes_matur$temperature[i] <= m_temp_l) {fishes_matur$Temp[i] = 'Colder Fishes'}
else {fishes_matur$Temp[i] = 'Warmer Fishes'}
}
}
ggplot(data = fishes_matur, aes(x = Temp, y = GtoASkew ))+
geom_boxplot()+
facet_wrap(~Maturated)+
theme_test()+
labs(y = 'GAskew ')
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
table(mutSpecCytB[!is.na(mutSpecCytB$temperature),]$Class)
mutSpecAllMean = mutSpec %>% group_by(Species, Class, temperature, matur_tm); mutSpecAllMean = mutSpecAllMean %>% summarise(A_C.SubstRate.heavy=mean(A_C.SubstRate.heavy), A_G.SubstRate.heavy=mean(A_G.SubstRate.heavy), A_T.SubstRate.heavy=mean(A_T.SubstRate.heavy), C_A.SubstRate.heavy=mean(C_A.SubstRate.heavy), C_G.SubstRate.heavy=mean(C_G.SubstRate.heavy), C_T.SubstRate.heavy=mean(C_T.SubstRate.heavy), G_A.SubstRate.heavy=mean(G_A.SubstRate.heavy), G_C.SubstRate.heavy=mean(G_C.SubstRate.heavy), G_T.SubstRate.heavy=mean(G_T.SubstRate.heavy), T_A.SubstRate.heavy=mean(T_A.SubstRate.heavy), T_C.SubstRate.heavy=mean(T_C.SubstRate.heavy), T_G.SubstRate.heavy=mean(T_G.SubstRate.heavy))
mutSpecAllMean = mutSpecAllMean[!is.na(mutSpecAllMean$C_T.SubstRate.heavy),]
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = c("A_C.h", "A_G.h", "A_T.h", "C_A.h", "C_G.h",
"C_T.h", "G_A.h", "G_C.h", "G_T.h", "T_A.h","T_C.h", "T_G.h"); names(averageMutSpec2) = c("Freq", "Subs")
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.pdf')
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
dev.off()
f1
cor.test(mutSpecCytB$A_G.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_A.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_C.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_T.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_G.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_A.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_C.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_T.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
nrow(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),])
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
mutSpecCytB$AGdivTC=mutSpecCytB$A_G.SubstRate.heavy/mutSpecCytB$T_C.SubstRate.heavy
mutSpecCytB$CTdivGA=mutSpecCytB$C_T.SubstRate.heavy/mutSpecCytB$G_A.SubstRate.heavy
mutSpecCytB[mutSpecCytB$AGdivTC == "Inf" | mutSpecCytB$AGdivTC == "NaN",]$AGdivTC = NA
mutSpecCytB[mutSpecCytB$CTdivGA == "Inf" | mutSpecCytB$CTdivGA == "NaN",]$CTdivGA = NA
cor.test(mutSpecCytB$AGdivTC,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$CTdivGA,mutSpecCytB$temperature, method = 'spearman')
mutSpecAllMean$AGdivTC=mutSpecAllMean$A_G.SubstRate.heavy/mutSpecAllMean$T_C.SubstRate.heavy
mutSpecAllMean$CTdivGA=mutSpecAllMean$C_T.SubstRate.heavy/mutSpecAllMean$G_A.SubstRate.heavy
mutSpecAllMean[mutSpecAllMean$AGdivTC == "Inf" | mutSpecAllMean$AGdivTC == "NaN",]$AGdivTC = NA
mutSpecAllMean[mutSpecAllMean$CTdivGA == "Inf" | mutSpecAllMean$CTdivGA == "NaN",]$CTdivGA = NA
cor.test(mutSpecAllMean$AGdivTC,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$CTdivGA,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]; N = as.character(paste("N", nrow(mutSpecAllMean), sep="")) #delete NA
pdf('../Figures/PolymorphicData.Actinopterygii.pdf',  width = 7, height = 7)
f1a = ggscatter(mutSpecAllMean, x = "temperature", y = "A_G.SubstRate.heavy",
color = "#73514f", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 AH>GH") + stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1a
f1b = ggscatter(mutSpecAllMean, x = "temperature", y = "C_T.SubstRate.heavy",
color = "#055088", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 CH>TH")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1b
dev.off()
f1a
f1b
pdf('../Figures/PolymorphicData.Actinopterygii.A_GdivT_C.pdf', width = 7, height = 7)
f1c = ggscatter(mutSpecAllMean, x = "temperature", y = "AGdivTC",
color = "#814194", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 A_GdivT_C")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1c
dev.off()
f1c
cor.test(mutSpecAllMean$temperature,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$A_G.SubstRate.heavy,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_A.SubstRate.heavy,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$T_C.SubstRate.heavy,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$C_T.SubstRate.heavy,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecCytB$AGdivTC,mutSpecCytB$matur_tm, method = 'spearman')
cor.test(mutSpecCytB$CTdivGA,mutSpecCytB$matur_tm, method = 'spearman')
nrow(mutSpecAllMean[!is.na(mutSpecAllMean$matur_tm),])
summary(lm(formula = temperature ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecCytB))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) * scale(matur_tm), data = mutSpecCytB))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) + scale(matur_tm), data = mutSpecCytB))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature), data = mutSpecCytB))
mutSpecCytBNAzeroomit = mutSpecCytB[!is.na(mutSpecCytB$AGdivTC),]
mutSpecCytBNAzeroomit = mutSpecCytBNAzeroomit[mutSpecCytBNAzeroomit$AGdivTC != 0,]
summary(lm(formula = AGdivTC ~ scale(temperature) * scale(matur_tm), data = mutSpecCytBNAzeroomit))
summary(lm(formula = AGdivTC ~ scale(temperature) + scale(matur_tm), data = mutSpecCytBNAzeroomit))
summary(lm(formula = AGdivTC ~ scale(temperature), data = mutSpecCytBNAzeroomit))
mutSpecAllMeanNAzeroomit = mutSpecAllMean[!is.na(mutSpecAllMean$AGdivTC),]
mutSpecAllMeanNAzeroomit = mutSpecAllMeanNAzeroomit[mutSpecAllMeanNAzeroomit$AGdivTC != 0,]
mutSpecAllMeanNAzeroomit = mutSpecAllMeanNAzeroomit[!is.na(mutSpecAllMeanNAzeroomit$CTdivGA),]
mutSpecAllMeanNAzeroomit = mutSpecAllMeanNAzeroomit[mutSpecAllMeanNAzeroomit$CTdivGA != 0,]
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature), data = mutSpecAllMean))
summary(lm(formula = AGdivTC ~ scale(temperature), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = C_T.SubstRate.heavy ~ scale(temperature), data = mutSpecAllMean))
summary(lm(formula = CTdivGA ~ scale(temperature), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = temperature ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecAllMean))
summary(lm(formula = matur_tm ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecAllMean))
nrow(mutSpecAllMean[!is.na(mutSpecAllMean$temperature) & !is.na(mutSpecAllMean$matur_tm),])
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMean))
nrow(mutSpecAllMeanNAzeroomit[!is.na(mutSpecAllMeanNAzeroomit$temperature) & !is.na(mutSpecAllMeanNAzeroomit$matur_tm),])
summary(lm(formula = AGdivTC ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = AGdivTC ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = C_T.SubstRate.heavy ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = C_T.SubstRate.heavy ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = CTdivGA ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = CTdivGA ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
row.names(mutSpecCytBNAzeroomit) = mutSpecCytBNAzeroomit$Species
tree_pruned = treedata(tree, mutSpecCytBNAzeroomit, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, mutSpecCytBNAzeroomit, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$AGdivTC = as.numeric(as.character(data$AGdivTC))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(AGdivTC ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(log2(AGdivTC) ~ log2(temperature), data_comp, lambda="ML"))
tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
row.names(mutSpecAllMeanNAzeroomit) = mutSpecAllMeanNAzeroomit$Species
tree_pruned = treedata(tree, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$AGdivTC = as.numeric(as.character(data$AGdivTC))
data$CTdivGA = as.numeric(as.character(data$CTdivGA))
data$A_G.SubstRate.heavy = as.numeric(as.character(data$A_G.SubstRate.heavy))
data$C_T.SubstRate.heavy = as.numeric(as.character(data$C_T.SubstRate.heavy))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(log2(A_G.SubstRate.heavy) ~ log2(temperature), data_comp, lambda="ML"))
summary(pgls(log2(C_T.SubstRate.heavy) ~ log2(temperature), data_comp, lambda="ML"))
summary(pgls(AGdivTC ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(log2(AGdivTC) ~ log2(temperature), data_comp, lambda="ML"))
summary(pgls(CTdivGA ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(log2(CTdivGA) ~ log2(temperature), data_comp, lambda="ML"))
