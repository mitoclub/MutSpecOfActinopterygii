averageMutSpec = averageMutSpec[!is.na(averageMutSpec$G_A.N) & !is.na(averageMutSpec$G_C.N) & !is.na(averageMutSpec$G_T.N),]; summary(averageMutSpec)
averageMutSpec = as.data.frame(apply(averageMutSpec, 2, mean)); averageMutSpec$Subs = row.names(averageMutSpec); names(averageMutSpec) = c("Freq", "Subs"); nrow(averageMutSpec)
View(averageMutSpec)
##########Reading MutSpec DataBase with temp and mt of Actinopterigii
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
table(mutSpec$Class)
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
mutSpecAllMean = mutSpec %>% group_by(Species, Class, temperature, matur_tm); mutSpecAllMean = mutSpecAllMean %>% summarise(A_C.N=mean(A_C.N), A_G.N=mean(A_G.N), A_T.N=mean(A_T.N), C_A.N=mean(C_A.N), C_G.N=mean(C_G.N), C_T.N=mean(C_T.N), G_A.N=mean(G_A.N), G_C.N=mean(G_C.N), G_T.N=mean(G_T.N), T_A.N=mean(T_A.N), T_C.N=mean(T_C.N), T_G.N=mean(T_G.N))
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
averageMutSpec = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]; summary(averageMutSpec)
averageMutSpec = averageMutSpec[!is.na(averageMutSpec$G_A.N) & !is.na(averageMutSpec$G_C.N) & !is.na(averageMutSpec$G_T.N),]; summary(averageMutSpec); nrow(averageMutSpec)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
table(mutSpec$Class)
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
mutSpecAllMean = mutSpec %>% group_by(Species, Class, temperature, matur_tm); mutSpecAllMean = mutSpecAllMean %>% summarise(A_C.N=mean(A_C.N), A_G.N=mean(A_G.N), A_T.N=mean(A_T.N), C_A.N=mean(C_A.N), C_G.N=mean(C_G.N), C_T.N=mean(C_T.N), G_A.N=mean(G_A.N), G_C.N=mean(G_C.N), G_T.N=mean(G_T.N), T_A.N=mean(T_A.N), T_C.N=mean(T_C.N), T_G.N=mean(T_G.N))
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
averageMutSpec = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]; summary(averageMutSpec)
averageMutSpec = averageMutSpec[!is.na(averageMutSpec$G_A.N) & !is.na(averageMutSpec$G_C.N) & !is.na(averageMutSpec$G_T.N),]; summary(averageMutSpec); nrow(averageMutSpec)
averageMutSpec = as.data.frame(apply(averageMutSpec, 2, mean)); averageMutSpec$Subs = row.names(averageMutSpec); names(averageMutSpec) = c("Freq", "Subs")
#only CytB
cor.test(mutSpecCytB$A_T.N,mutSpecCytB$temperature, method = 'spearman')
######### TC / AG rank corr and log2 models
mutSpecAllMean$TCdivAG=mutSpecAllMean$T_C.N/mutSpecAllMean$A_G.N
mutSpecAllMean[mutSpecAllMean$TCdivAG == "Inf" | mutSpecAllMean$TCdivAG == "NaN",]$TCdivAG = NA
cor.test(mutSpecAllMean$TCdivAG,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean$GAdivCT=mutSpecAllMean$G_A.N/mutSpecAllMean$C_T.N
mutSpecAllMean[mutSpecAllMean$GAdivCT == "Inf" | mutSpecAllMean$GAdivCT == "NaN" | is.na(mutSpecAllMean$GAdivCT),]$GAdivCT = NA
cor.test(mutSpecAllMean$GAdivCT,mutSpecAllMean$temperature, method = 'spearman')
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
AllSynNuc = read.table("../data/1raw/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
AllSynNuc = AllSynNuc[AllSynNuc$Gene != 'ND6',]
AllSynNuc = aggregate(list(AllSynNuc$NeutralA,AllSynNuc$NeutralT,AllSynNuc$NeutralG,AllSynNuc$NeutralC), by = list(AllSynNuc$Species), FUN = sum)
names(AllSynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
AllSynNuc$FrA = AllSynNuc$NeutralA / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrT = AllSynNuc$NeutralT / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrG = AllSynNuc$NeutralG / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrC = AllSynNuc$NeutralC / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
matur = read.table('../Data/1raw/FishBaseMaturity_Tm.txt', header=T)
matur = matur %>% group_by(Species) %>% summarise(matur_tm = median(Tm))
AllSynNuc = merge(AllSynNuc, tm, by='Species', all.x=T)
AllSynNuc = merge(AllSynNuc, matur, by='Species', all.x=T)
nrow(AllSynNuc[!is.na(AllSynNuc$temperature),])
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrA, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrT, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrG, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrC, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrA, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrT, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrG, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrC, method = "spearman")
AllSynNuc$TG = AllSynNuc$FrT+AllSynNuc$FrG
AllSynNuc$AC = AllSynNuc$FrA+AllSynNuc$FrC
AllSynNuc$TG_ACSkew = (AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC); summary(AllSynNuc$TG_ACSkew)
AllSynNuc$AC_TGSkew = -(AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC); summary(AllSynNuc$AC_TGSkew) #OUR
AllSynNuc = AllSynNuc[!is.na(AllSynNuc$temperature),]; N = as.character(paste("N", nrow(AllSynNuc), sep="")) #delete NA
ggscatter(AllSynNuc, x = "temperature", y = "FrT",
color = "#e61a0b", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of A")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "FrG",
color = "#009414", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of C")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "FrC",
color = "#5c5c5c", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of G")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "FrA",
color = "#0918e6", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of T")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "AC_TGSkew",
color = "#c99bc9", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Mean annual water temperature, ?C", ylab="STG-SAC skew", ylim=c(0.1, 0.65), xlim=c(0,30))+stat_cor(method = "spearman", label.x = 2.5, label.y = 0.64, aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
summary(lm(FrT ~ scale(temperature)+scale(matur_tm), data = AllSynNuc))
summary(lm(FrT ~ log2(temperature + 2)*log2(matur_tm), data = AllSynNuc))  # keep it for presentation!!!
summary(lm(FrT ~ log2(temperature + 2)+log2(matur_tm), data = AllSynNuc))
summary(lm(FrG ~ log2(temperature + 2)+log2(matur_tm), data = AllSynNuc)) # strong
summary(lm(FrA ~ log2(temperature + 2)+log2(matur_tm), data = AllSynNuc)) # strong
summary(lm(AC_TGSkew ~ log2(temperature + 2)+log2(matur_tm), data = AllSynNuc))
summary(lm(AC_TGSkew ~ scale(temperature + 2)+scale(matur_tm), data = AllSynNuc))# ###PICS
summary(lm(AC_TGSkew ~ temperature, data = AllSynNuc))
#tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
tree = read.tree('../Data/1raw/Fishes_Polymorphic_sp.nwk')
row.names(AllSynNuc) = AllSynNuc$Species
tree_pruned = treedata(tree, AllSynNuc, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, AllSynNuc, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$AC_TGSkew = as.numeric(as.character(data$AC_TGSkew))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(AC_TGSkew ~ log2(temperature+2), data_comp, lambda="ML"))
summary(pgls(log2(temperature+2) ~ AC_TGSkew, data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ log2(temperature + 2) + log2(matur_tm), data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ temperature, data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ temperature + matur_tm, data_comp, lambda="ML"))
AllSynNuc = AllSynNuc[!is.na(AllSynNuc$matur_tm),]; N = as.character(paste("N", nrow(AllSynNuc), sep=""))
medianTm = median(AllSynNuc[!is.na(AllSynNuc$matur_tm),]$matur_tm)
AllSynNuc$Longevity = "Na"
AllSynNuc[AllSynNuc$matur_tm < medianTm,]$Longevity = "ShortLived"
AllSynNuc[AllSynNuc$matur_tm >= medianTm,]$Longevity = "LongLived"
plot(AllSynNuc[AllSynNuc$Longevity == "ShortLived",]$temperature, AllSynNuc[AllSynNuc$Longevity == "ShortLived",]$AC_TGSkew, col="#4da36c", xlab="Mean annual water temperature, C?", ylab="STG-SAC skew", ylim=c(0.1, 0.65), xlim=c(0,30), pch = 16)
abline((0.331911-0.049196), 0.006172, col="#4da36c", lwd = 2)
par(new=TRUE)
plot(AllSynNuc[AllSynNuc$Longevity == "LongLived",]$temperature, AllSynNuc[AllSynNuc$Longevity == "LongLived",]$AC_TGSkew, col="#42cbf5", xlab="", ylab="", ylim=c(0.1, 0.65), xlim=c(0,30), pch = 16)
abline(0.331911, 0.006172, col="#42cbf5", lwd = 2)
legend("bottomright", legend=c( "Short time of maturation","Long time of maturation"), col=c("#4da36c","#42cbf5"), pch = 16)
View(AllSynNuc)
summary(lm(AC_TGSkew ~ temperature, data = AllSynNuc))
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
AllSynNuc = read.table("../data/1raw/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
AllSynNuc = AllSynNuc[AllSynNuc$Gene != 'ND6',]
AllSynNuc = aggregate(list(AllSynNuc$NeutralA,AllSynNuc$NeutralT,AllSynNuc$NeutralG,AllSynNuc$NeutralC), by = list(AllSynNuc$Species), FUN = sum)
names(AllSynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
AllSynNuc$FrA = AllSynNuc$NeutralA / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrT = AllSynNuc$NeutralT / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrG = AllSynNuc$NeutralG / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrC = AllSynNuc$NeutralC / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
matur = read.table('../Data/1raw/FishBaseMaturity_Tm.txt', header=T)
matur = matur %>% group_by(Species) %>% summarise(matur_tm = median(Tm))
AllSynNuc = merge(AllSynNuc, tm, by='Species', all.x=T)
AllSynNuc = merge(AllSynNuc, matur, by='Species', all.x=T)
nrow(AllSynNuc[!is.na(AllSynNuc$temperature),])
View(AllSynNuc)
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrA, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrT, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrG, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrC, method = "spearman")
AllSynNuc$TG = AllSynNuc$FrT+AllSynNuc$FrG
AllSynNuc$AC = AllSynNuc$FrA+AllSynNuc$FrC
AllSynNuc$TG_ACSkew = (AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC); summary(AllSynNuc$TG_ACSkew)
AllSynNuc$AC_TGSkew = -(AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC); summary(AllSynNuc$AC_TGSkew) #OUR
nrow(AllSynNuc[!is.na(AllSynNuc$AC_TGSkew),])
nrow(AllSynNuc[!is.na(AllSynNuc$AC_TGSkew) & !is.na(AllSynNuc$temperature),])
summary(lm(AC_TGSkew ~ temperature, data = AllSynNuc))
summary(lm(AC_TGSkew ~ temperature, data = AllSynNuc))
#tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
tree = read.tree('../Data/1raw/Fishes_WholeGenomes_sp.nwk')
#tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
tree = read.tree('../Data/1raw/Fishes_WholeGenomes_sp.nwk')
#tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
tree = read.tree('../Data/1raw/Fishes_WholeGenomes_sp.nwk')
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
AllSynNuc = read.table("../data/1raw/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
AllSynNuc = AllSynNuc[AllSynNuc$Gene != 'ND6',]
AllSynNuc = aggregate(list(AllSynNuc$NeutralA,AllSynNuc$NeutralT,AllSynNuc$NeutralG,AllSynNuc$NeutralC), by = list(AllSynNuc$Species), FUN = sum)
names(AllSynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
AllSynNuc$FrA = AllSynNuc$NeutralA / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrT = AllSynNuc$NeutralT / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrG = AllSynNuc$NeutralG / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrC = AllSynNuc$NeutralC / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
matur = read.table('../Data/1raw/FishBaseMaturity_Tm.txt', header=T)
matur = matur %>% group_by(Species) %>% summarise(matur_tm = median(Tm))
AllSynNuc = merge(AllSynNuc, tm, by='Species', all.x=T)
AllSynNuc = merge(AllSynNuc, matur, by='Species', all.x=T)
nrow(AllSynNuc[!is.na(AllSynNuc$temperature),])
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
matur = read.table('../Data/1raw/FishBaseMaturity_Tm.txt', header=T)
matur = matur %>% group_by(Species) %>% summarise(matur_tm = median(Tm))
AllSynNuc = merge(AllSynNuc, tm, by='Species', all.x=T)
AllSynNuc = merge(AllSynNuc, matur, by='Species', all.x=T)
nrow(AllSynNuc[!is.na(AllSynNuc$temperature),])
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrA, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrA, method = "spearman")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
AllSynNuc = read.table("../data/1raw/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
AllSynNuc = AllSynNuc[AllSynNuc$Gene != 'ND6',]
AllSynNuc = aggregate(list(AllSynNuc$NeutralA,AllSynNuc$NeutralT,AllSynNuc$NeutralG,AllSynNuc$NeutralC), by = list(AllSynNuc$Species), FUN = sum)
names(AllSynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
AllSynNuc$FrA = AllSynNuc$NeutralA / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrT = AllSynNuc$NeutralT / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrG = AllSynNuc$NeutralG / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrC = AllSynNuc$NeutralC / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
matur = read.table('../Data/1raw/FishBaseMaturity_Tm.txt', header=T)
matur = matur %>% group_by(Species) %>% summarise(matur_tm = median(Tm))
AllSynNuc = merge(AllSynNuc, tm, by='Species', all.x=T)
AllSynNuc = merge(AllSynNuc, matur, by='Species', all.x=T)
nrow(AllSynNuc[!is.na(AllSynNuc$temperature),])
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrA, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrT, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrG, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrC, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrA, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrT, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrG, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrC, method = "spearman")
AllSynNuc$TG = AllSynNuc$FrT+AllSynNuc$FrG
AllSynNuc$AC = AllSynNuc$FrA+AllSynNuc$FrC
AllSynNuc$TG_ACSkew = (AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC); summary(AllSynNuc$TG_ACSkew)
AllSynNuc$AC_TGSkew = -(AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC); summary(AllSynNuc$AC_TGSkew) #OUR
nrow(AllSynNuc[!is.na(AllSynNuc$AC_TGSkew) & !is.na(AllSynNuc$temperature),])
AllSynNuc = AllSynNuc[!is.na(AllSynNuc$temperature),]; N = as.character(paste("N", nrow(AllSynNuc), sep="")) #delete NA
ggscatter(AllSynNuc, x = "temperature", y = "FrT",
color = "#e61a0b", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of A")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "FrG",
color = "#009414", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of C")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "FrC",
color = "#5c5c5c", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of G")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "FrA",
color = "#0918e6", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of T")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "AC_TGSkew",
color = "#c99bc9", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Mean annual water temperature, ?C", ylab="STG-SAC skew", ylim=c(0.1, 0.65), xlim=c(0,30))+stat_cor(method = "spearman", label.x = 2.5, label.y = 0.64, aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
summary(lm(AC_TGSkew ~ temperature, data = AllSynNuc))
#tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
tree = read.tree('../Data/1raw/Fishes_WholeGenomes_sp.nwk')
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
AllSynNuc = read.table("../data/1raw/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
AllSynNuc = AllSynNuc[AllSynNuc$Gene != 'ND6',]
AllSynNuc = aggregate(list(AllSynNuc$NeutralA,AllSynNuc$NeutralT,AllSynNuc$NeutralG,AllSynNuc$NeutralC), by = list(AllSynNuc$Species), FUN = sum)
names(AllSynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
AllSynNuc$FrA = AllSynNuc$NeutralA / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrT = AllSynNuc$NeutralT / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrG = AllSynNuc$NeutralG / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrC = AllSynNuc$NeutralC / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
matur = read.table('../Data/1raw/FishBaseMaturity_Tm.txt', header=T)
matur = matur %>% group_by(Species) %>% summarise(matur_tm = median(Tm))
AllSynNuc = merge(AllSynNuc, tm, by='Species', all.x=T)
AllSynNuc = merge(AllSynNuc, matur, by='Species', all.x=T)
nrow(AllSynNuc[!is.na(AllSynNuc$temperature),])
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrA, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrT, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrG, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrC, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrA, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrT, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrG, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrC, method = "spearman")
AllSynNuc$TG = AllSynNuc$FrT+AllSynNuc$FrG
AllSynNuc$AC = AllSynNuc$FrA+AllSynNuc$FrC
AllSynNuc$TG_ACSkew = (AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC); summary(AllSynNuc$TG_ACSkew)
AllSynNuc$AC_TGSkew = -(AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC); summary(AllSynNuc$AC_TGSkew) #OUR
nrow(AllSynNuc[!is.na(AllSynNuc$AC_TGSkew) & !is.na(AllSynNuc$temperature),])
AllSynNuc = AllSynNuc[!is.na(AllSynNuc$temperature),]; N = as.character(paste("N", nrow(AllSynNuc), sep="")) #delete NA
ggscatter(AllSynNuc, x = "temperature", y = "FrT",
color = "#e61a0b", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of A")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "FrG",
color = "#009414", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of C")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "FrC",
color = "#5c5c5c", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of G")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "FrA",
color = "#0918e6", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of T")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "AC_TGSkew",
color = "#c99bc9", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Mean annual water temperature, ?C", ylab="STG-SAC skew", ylim=c(0.1, 0.65), xlim=c(0,30))+stat_cor(method = "spearman", label.x = 2.5, label.y = 0.64, aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
summary(lm(AC_TGSkew ~ temperature, data = AllSynNuc))
#tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
tree = read.tree('../Data/1raw/Fishes_WholeGenomes_sp.nwk')
#tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
tree = read.tree('../Data/1raw/Fishes_WholeGenomes_sp.nwk')
row.names(AllSynNuc) = AllSynNuc$Species
tree_pruned = treedata(tree, AllSynNuc, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, AllSynNuc, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$AC_TGSkew = as.numeric(as.character(data$AC_TGSkew))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(AC_TGSkew ~ log2(temperature+2), data_comp, lambda="ML"))
summary(pgls(log2(temperature+2) ~ AC_TGSkew, data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ log2(temperature + 2) + log2(matur_tm), data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ temperature, data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ temperature + matur_tm, data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ temperature, data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ scale(temperature), data_comp, lambda="ML"))
View(data_comp)
summary(pgls(scale(AC_TGSkew) ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(log2(AC_TGSkew) ~ log2(temperature), data_comp, lambda="ML"))
summary(pgls(log2(AC_TGSkew) ~ log2(temperature+1), data_comp, lambda="ML"))
summary(pgls(log2(AC_TGSkew) ~ log2(temperature+2), data_comp, lambda="ML"))
summary(lm(AC_TGSkew ~ scale(temperature), data = AllSynNuc))
summary(lm(AC_TGSkew ~ temperature, data = AllSynNuc))
summary(lm(AC_TGSkew ~ log2(temperature)+log2(matur_tm), data = AllSynNuc))# ###PICS
summary(lm(AC_TGSkew ~ log2(temperature+2)+log2(matur_tm), data = AllSynNuc))# ###PICS
summary(lm(AC_TGSkew ~ scale(temperature+2)+scale(matur_tm), data = AllSynNuc))
summary(pgls(log2(AC_TGSkew) ~ log2(temperature+2)+scale(matur_tm)), data_comp, lambda="ML"))
summary(pgls(log2(AC_TGSkew) ~ log2(temperature+2)+scale(matur_tm), data_comp, lambda="ML"))
summary(pgls(log2(AC_TGSkew) ~ log2(temperature+2)+log2(matur_tm), data_comp, lambda="ML"))
View(data)
View(data_comp)
nrow(AllSynNuc[!is.na(AllSynNuc$AC_TGSkew) & !is.na(AllSynNuc$temperature) & !is.na(AllSynNuc$matur_tm),])
nrow(AllSynNuc[!is.na(AllSynNuc$AC_TGSkew) & !is.na(AllSynNuc$temperature),])
nrow(AllSynNuc[!is.na(AllSynNuc$temperature) & !is.na(AllSynNuc$FrT),])
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
mutSpecAllMean = mutSpec %>% group_by(Species, Class, temperature, matur_tm); mutSpecAllMean = mutSpecAllMean %>% summarise(A_C.N=mean(A_C.N), A_G.N=mean(A_G.N), A_T.N=mean(A_T.N), C_A.N=mean(C_A.N), C_G.N=mean(C_G.N), C_T.N=mean(C_T.N), G_A.N=mean(G_A.N), G_C.N=mean(G_C.N), G_T.N=mean(G_T.N), T_A.N=mean(T_A.N), T_C.N=mean(T_C.N), T_G.N=mean(T_G.N))
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
averageMutSpec = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]; summary(averageMutSpec)
averageMutSpec = averageMutSpec[!is.na(averageMutSpec$G_A.N) & !is.na(averageMutSpec$G_C.N) & !is.na(averageMutSpec$G_T.N),]; summary(averageMutSpec)
averageMutSpec = as.data.frame(apply(averageMutSpec, 2, mean)); averageMutSpec$Subs = row.names(averageMutSpec); names(averageMutSpec) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
palette = c("#bdbdbd", "#036a5b", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#9c3d37", "#055088", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#73514f", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
nrow(averageMutSpec)
averageMutSpec = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]; summary(averageMutSpec)
averageMutSpec = averageMutSpec[!is.na(averageMutSpec$G_A.N) & !is.na(averageMutSpec$G_C.N) & !is.na(averageMutSpec$G_T.N),]; summary(averageMutSpec)
nrow(averageMutSpec)
averageMutSpec = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec = averageMutSpec[!is.na(averageMutSpec$G_A.N) & !is.na(averageMutSpec$G_C.N) & !is.na(averageMutSpec$G_T.N),]
averageMutSpec = as.data.frame(apply(averageMutSpec, 2, mean)); averageMutSpec$Subs = row.names(averageMutSpec); names(averageMutSpec) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
palette = c("#bdbdbd", "#036a5b", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#9c3d37", "#055088", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#73514f", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
cor.test(mutSpecCytB$A_T.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_A.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_C.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_A.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_T.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_C.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_A.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_T.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_G.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_T.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_G.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_C.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_A.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_G.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_C.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_A.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_T.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_C.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_A.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_T.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_G.N,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean$TCdivAG=mutSpecAllMean$T_C.N/mutSpecAllMean$A_G.N
mutSpecAllMean[mutSpecAllMean$TCdivAG == "Inf" | mutSpecAllMean$TCdivAG == "NaN",]$TCdivAG = NA
cor.test(mutSpecAllMean$TCdivAG,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean$GAdivCT=mutSpecAllMean$G_A.N/mutSpecAllMean$C_T.N
mutSpecAllMean[mutSpecAllMean$GAdivCT == "Inf" | mutSpecAllMean$GAdivCT == "NaN" | is.na(mutSpecAllMean$GAdivCT),]$GAdivCT = NA
cor.test(mutSpecAllMean$GAdivCT,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$TCdivAG,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean$TCdivAG=mutSpecAllMean$T_C.N/mutSpecAllMean$A_G.N
mutSpecAllMean[mutSpecAllMean$TCdivAG == "Inf" | mutSpecAllMean$TCdivAG == "NaN",]$TCdivAG = NA
cor.test(mutSpecAllMean$TCdivAG,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]; N = as.character(paste("N", nrow(mutSpecAllMean), sep="")) #delete NA
cor.test(mutSpecAllMean$A_T.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$A_G.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$A_C.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$T_A.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$T_G.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$T_C.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_A.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_T.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_C.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$C_A.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$C_T.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$C_G.N,mutSpecAllMean$matur_tm, method = 'spearman')
mutSpecAllMeanNAzeroomit = mutSpecAllMean[!is.na(mutSpecAllMean$TCdivAG),]
mutSpecAllMeanNAzeroomit = mutSpecAllMeanNAzeroomit[mutSpecAllMeanNAzeroomit$TCdivAG != 0,]
summary(lm(formula = TCdivAG ~ scale(temperature), data = mutSpecAllMeanNAzeroomit))
tree = read.tree('../Data/1raw/Fishes_Polymorphic_sp.nwk')
row.names(mutSpecAllMeanNAzeroomit) = mutSpecAllMeanNAzeroomit$Species
tree_pruned = treedata(tree, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$TCdivAG = as.numeric(as.character(data$TCdivAG))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(TCdivAG ~ scale(temperature), data_comp, lambda="ML"))
View(data_comp)
nrow(mutSpecAllMeanNAzeroomit)
nrow(mutSpecAllMeanNAzeroomit[!is.na(mutSpecAllMeanNAzeroomit$temperature) & !is.na(mutSpecAllMeanNAzeroomit$matur_tm),])
nrow(mutSpecAllMean)
nrow(mutSpecAllMean)
summary(lm(formula = TCdivAG ~ scale(temperature), data = mutSpecAllMean))
nrow(mutSpecAllMean)
summary(lm(formula = TCdivAG ~ scale(temperature), data = mutSpecAllMean))
tree = read.tree('../Data/1raw/Fishes_Polymorphic_sp.nwk')
row.names(mutSpecAllMean) = mutSpecAllMean$Species
tree_pruned = treedata(tree, mutSpecAllMean, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, mutSpecAllMean, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$TCdivAG = as.numeric(as.character(data$TCdivAG))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(TCdivAG ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(log2(TCdivAG) ~ log2(temperature), data_comp, lambda="ML"))
summary(pgls(log2(TCdivAG+1) ~ log2(temperature), data_comp, lambda="ML"))
summary(lm(formula = TCdivAG ~ scale(temperature), data = mutSpecAllMean))
summary(lm(formula = T_C.N ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = T_C.N ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = T_C.N ~ scale(temperature), data = mutSpecAllMean))
nrow(mutSpecAllMean[!is.na(mutSpecAllMean$temperature) & !is.na(mutSpecAllMean$matur_tm),])
summary(lm(formula = TCdivAG ~ scale(temperature), data = mutSpecAllMean))
nrow(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),])
length(data_comp$data["temperature"])
length(data_comp$data["temperature"])
length(data_comp$data["temperature"])
nrow(data_comp$data["temperature"])
data_comp$data["temperature"]
nrow(data_comp$data)
data_comp$data
