if (!require(ggpubr)) install.packages("ggpubr")
if (!require(vioplot)) install.packages("vioplot")
library("ggpubr")
library(vioplot)
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
rm(list=ls(all=TRUE))
###########Taxonomy###################################################################
Taxa = read.table("../Data/1raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
Taxa = Taxa[,-1]
TaxaMore = read.table("../Data/1raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub("; Chordata;.*",'',TaxaMore$V2);
TaxaMore$Class = gsub(".*; ",'',TaxaMore$Class);
TaxaMore$Class = gsub('Actinopteri','Actinopterygii',TaxaMore$Class)
TaxaMore$Class = gsub("Testudines|Squamata|Crocodylia",'Reptilia',TaxaMore$Class)
table(TaxaMore$Class)
TaxaMore = TaxaMore[,-c(1,2)]
Taxa = rbind(Taxa,TaxaMore); Taxa = unique(Taxa)
###########Reading mutspec data
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
rm(list=ls(all=TRUE))
###########Reading mutspec data
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
View(mutSpec)
########AnAge data reading
AA = read.table("../../Body/1Raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
########AnAge data reading
AA = read.table("../Data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AA$TemperatureC = AA$Temperature..K. - 273.15
summary(AA$TemperatureC)
table(AA[AA$Class == "Aves",]$Temperature..K.)
View(AA)
BirbTemp = read.csv("../Data/1raw/body_temp.csv")
View(BirbTemp)
BirbTemp =  read.table("../Data/1raw/body_temp.csv", header = TRUE)
BirbTemp =  read.table("../Data/1raw/body_temp.csv", header = TRUE)
BirbTemp =  read.table("../Data/1raw/body_temp.csv", header = TRUE)
BirbTemp =  read.table("../Data/1raw/body_temp.csv", header = TRUE)
BirbTemp =  read.table("../Data/1raw/body_temp.txt")
View(BirbTemp)
BirbTemp =  read.table("../Data/1raw/body_temp.txt", header = TRUE)
View(BirbTemp)
ALL = merge(mutSpec, AA)
ALL = merge(mutSpec, AA, all = T)
rm(list=ls(all=TRUE))
###########Reading mutspec data
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
########AnAge data reading
AA = read.table("../Data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AA$temperature = AA$Temperature..K. - 273.15
BirbTemp =  read.table("../Data/1raw/body_temp.txt", header = TRUE)
BirbTemp =  read.table("../Data/1raw/body_temp.txt", header = TRUE)
ALL = merge(mutSpec, AA, all = T)
ALL = merge(ALL, BirbTemp, all = T)
View(ALL)
table(ALL$temperature)
str(ALL$temperature)
summary(ALL$temperature)
!is.na(ALL$temperature)
ALL[!is.na(ALL$temperature),]
nrow(ALL[!is.na(ALL$temperature),])
table(ALL[!is.na(ALL$temperature),]$Class)
View(mutSpec)
View(BirbTemp)
BirbTemp$Class = "Aves"
ALL = merge(mutSpec, AA, all = T)
ALL = merge(ALL, BirbTemp, all = T)
table(ALL[!is.na(ALL$temperature),]$Class)
ggviolin(ALL, x = "Class", y = "temperature", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "Body temperature, ?C",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylim = c(0, 50))
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.Violin.pdf', width = 10, height = 5.3)
#ggviolin(ALL, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(ALL, x = "Class", y = "temperature", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "Body temperature, ?C",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylim = c(0, 50))
dev.off()
table(ALL[!is.na(ALL$temperature),]$Class)
ALL$TCdivAG=ALL$T_C.N/ALL$A_G.N
ALL[ALL$TCdivAG == "Inf" | ALL$TCdivAG == "NaN",]$TCdivAG = NA
ALL$TCdivAG=ALL$T_C.N/ALL$A_G.N
View(ALL)
ALL[ALL$TCdivAG == "Inf" | ALL$TCdivAG == "NaN",]$TCdivAG = NA
ALLDIV = ALL[!is.na(ALL$A_G.N),]
View(ALL)
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(vioplot)) install.packages("vioplot")
library("ggpubr")
library(vioplot)
###########Reading mutspec data
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
########AnAge data reading
AA = read.table("../Data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AA$temperature = AA$Temperature..K. - 273.15
BirbTemp =  read.table("../Data/1raw/body_temp.txt", header = TRUE)
BirbTemp$Class = "Aves"
ALL = merge(mutSpec, AA, all = T)
ALL = merge(ALL, BirbTemp, all = T)
ggviolin(ALL, x = "Class", y = "temperature", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "Body temperature, ?C",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylim = c(0, 50))
ALLDIV = ALL[!is.na(ALL$A_G.N),]; ALLDIV$TCdivAG=ALLDIV$T_C.N/ALLDIV$A_G.N; ALLDIV[ALLDIV$TCdivAG == "Inf" | ALLDIV$TCdivAG == "NaN",]$TCdivAG = NA
ggviolin(ALLDIV, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
View(ALLDIV)
table(ALLDIV[!is.na(ALL$TCdivAG),]$Class)
ALLDIV[!is.na(ALL$TCdivAG),]$Class
table(ALLDIV[!is.na(TCdivAG$TCdivAG),]$Class)
table(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class)
ALLDIV[!is.na(ALLDIV$TCdivAG),]
ALLDIV = ALL[!is.na(ALL$A_G.N),]; ALLDIV$TCdivAG=ALLDIV$T_C.N/ALLDIV$A_G.N; ALLDIV[ALLDIV$TCdivAG == "Inf" | ALLDIV$TCdivAG == "NaN" | ALLDIV$TCdivAG == 0,]$TCdivAG  = NA
table(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class)
ALLDIV[!is.na(ALLDIV$TCdivAG),]
table(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class)
nrow(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class)
nrow(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class))
nrow(ALLDIV[!is.na(ALLDIV$TCdivAG),])
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.Violin.pdf', width = 10, height = 5.3)
ggviolin(ALL, x = "Class", y = "temperature", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "Body temperature, ?C",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylim = c(0, 50))
ALLDIV = ALL[!is.na(ALL$A_G.N),]; ALLDIV$TCdivAG=ALLDIV$T_C.N/ALLDIV$A_G.N; ALLDIV[ALLDIV$TCdivAG == "Inf" | ALLDIV$TCdivAG == "NaN" | ALLDIV$TCdivAG == 0,]$TCdivAG  = NA
ggviolin(ALLDIV, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
dev.off()
table(ALL[!is.na(ALL$temperature),]$Class)
table(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class)
ALLDIV = ALL[!is.na(ALL$A_G.N),]; ALLDIV$TCdivAG=ALLDIV$T_C.N/ALLDIV$A_G.N; ALLDIV[ALLDIV$TCdivAG == "Inf" | ALLDIV$TCdivAG == "NaN" | ALLDIV$TCdivAG == 0,]$TCdivAG  = NA; ALLDIV$TCdivAG = log2(ALLDIV$TCdivAG)
ggviolin(ALLDIV, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.Violin.pdf', width = 10, height = 5.3)
ggviolin(ALL, x = "Class", y = "temperature", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "Body temperature, ?C",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylim = c(0, 50))
ALLDIV = ALL[!is.na(ALL$A_G.N),]; ALLDIV$TCdivAG=ALLDIV$T_C.N/ALLDIV$A_G.N; ALLDIV[ALLDIV$TCdivAG == "Inf" | ALLDIV$TCdivAG == "NaN" | ALLDIV$TCdivAG == 0,]$TCdivAG  = NA; ALLDIV$TCdivAG = log2(ALLDIV$TCdivAG)
ggviolin(ALLDIV, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
dev.off()
table(ALL[!is.na(ALL$temperature),]$Class)
table(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class)
ALLDIV[!is.na(ALLDIV$TCdivAG),]
a = ALLDIV[!is.na(ALLDIV$TCdivAG),]
a
View(a)
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.Violin.pdf', width = 10, height = 5.3)
ggviolin(ALL, x = "Class", y = "temperature", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "Body temperature, ?C",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylim = c(0, 50))
ALLDIV = ALL[!is.na(ALL$A_G.N),]; ALLDIV$TCdivAG=ALLDIV$T_C.N/ALLDIV$A_G.N; ALLDIV[ALLDIV$TCdivAG == "Inf" | ALLDIV$TCdivAG == "NaN" | ALLDIV$TCdivAG == 0,]$TCdivAG  = NA; ALLDIV$TCdivAG = log2(ALLDIV$TCdivAG)
ggviolin(ALLDIV, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
dev.off()
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
##########Reading MutSpec DataBase with temp and mt of Actinopterigii
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
table(mutSpec$Class)
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
mutSpecAllMean = mutSpec %>% group_by(Species, Class, temperature, matur_tm); mutSpecAllMean = mutSpecAllMean %>% summarise(A_C.N=mean(A_C.N), A_G.N=mean(A_G.N), A_T.N=mean(A_T.N), C_A.N=mean(C_A.N), C_G.N=mean(C_G.N), C_T.N=mean(C_T.N), G_A.N=mean(G_A.N), G_C.N=mean(G_C.N), G_T.N=mean(G_T.N), T_A.N=mean(T_A.N), T_C.N=mean(T_C.N), T_G.N=mean(T_G.N))
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
# Average MutSpec for Actinopteri
cor.test(mutSpecCytB$A_T.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$A_G.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$A_C.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_A.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_G.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_C.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_A.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_T.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_C.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_A.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_T.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_G.N,mutSpecCytB$temperature, method = 'spearman')
#all by mean
cor.test(mutSpecAllMean$A_T.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_G.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_C.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_A.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_G.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_C.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_A.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_T.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_C.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_A.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_T.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_G.N,mutSpecAllMean$temperature, method = 'spearman')
######### TC / AG rank corr and log2 models
mutSpecAllMean$TCdivAG=mutSpecAllMean$T_C.N/mutSpecAllMean$A_G.N
mutSpecAllMean[mutSpecAllMean$TCdivAG == "Inf" | mutSpecAllMean$TCdivAG == "NaN",]$TCdivAG = NA
cor.test(mutSpecAllMean$TCdivAG,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean$GAdivCT=mutSpecAllMean$G_A.N/mutSpecAllMean$C_T.N
mutSpecAllMean[mutSpecAllMean$GAdivCT == "Inf" | mutSpecAllMean$GAdivCT == "NaN" | is.na(mutSpecAllMean$GAdivCT),]$GAdivCT = NA
cor.test(mutSpecAllMean$GAdivCT,mutSpecAllMean$temperature, method = 'spearman')
#####correlation of mutspec with time of maturation in fishes
#all by mean
cor.test(mutSpecAllMean$A_T.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$A_G.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$A_C.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$T_A.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$T_G.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$T_C.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_A.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_T.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_C.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$C_A.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$C_T.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$C_G.N,mutSpecAllMean$matur_tm, method = 'spearman')
summary(lm(formula = temperature ~ scale(T_C.N) + scale(A_G.N), data = mutSpecAllMean))
summary(lm(formula = T_C.N ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = T_C.N ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = T_C.N ~ scale(temperature), data = mutSpecAllMean))
summary(lm(formula = A_G.N ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = A_G.N ~ scale(temperature), data = mutSpecAllMean))
mutSpecAllMeanNAzeroomit = mutSpecAllMean[!is.na(mutSpecAllMean$TCdivAG),]
mutSpecAllMeanNAzeroomit = mutSpecAllMeanNAzeroomit[mutSpecAllMeanNAzeroomit$TCdivAG != 0,]
mutSpecAllMeanNAzeroomit = mutSpecAllMeanNAzeroomit[!is.na(mutSpecAllMeanNAzeroomit$GAdivCT),]
mutSpecAllMeanNAzeroomit = mutSpecAllMeanNAzeroomit[mutSpecAllMeanNAzeroomit$GAdivCT != 0,]
summary(lm(formula = log2(TCdivAG) ~ scale(temperature), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = temperature ~ scale(TCdivAG), data = mutSpecAllMeanNAzeroomit))
########################################################################################################
### PICs ###############################################################################################
########################################################################################################
#tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
tree = read.tree('../Data/1raw/Fishes_Polymorphic_sp.nwk')
row.names(mutSpecAllMeanNAzeroomit) = mutSpecAllMeanNAzeroomit$Species
tree_pruned = treedata(tree, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$TCdivAG = as.numeric(as.character(data$TCdivAG))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(TCdivAG ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(log2(TCdivAG) ~ log2(temperature), data_comp, lambda="ML"))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
mutSpecAllMean = mutSpec %>% group_by(Species, Class, temperature, matur_tm); mutSpecAllMean = mutSpecAllMean %>% summarise(A_C.N=mean(A_C.N), A_G.N=mean(A_G.N), A_T.N=mean(A_T.N), C_A.N=mean(C_A.N), C_G.N=mean(C_G.N), C_T.N=mean(C_T.N), G_A.N=mean(G_A.N), G_C.N=mean(G_C.N), G_T.N=mean(G_T.N), T_A.N=mean(T_A.N), T_C.N=mean(T_C.N), T_G.N=mean(T_G.N))
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
averageMutSpec = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]; summary(averageMutSpec)
averageMutSpec = averageMutSpec[!is.na(averageMutSpec$G_A.N) & !is.na(averageMutSpec$G_C.N) & !is.na(averageMutSpec$G_T.N),]; summary(averageMutSpec)
averageMutSpec = as.data.frame(apply(averageMutSpec, 2, mean)); averageMutSpec$Subs = row.names(averageMutSpec); names(averageMutSpec) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
palette = c("#bdbdbd", "#036a5b", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#9c3d37", "#055088", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#73514f", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
cor.test(mutSpecCytB$A_T.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_A.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_C.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_A.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_T.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_C.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_A.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_T.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_G.N,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_T.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_G.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_C.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_A.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_G.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_C.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_A.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_T.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_C.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_A.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_T.N,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_G.N,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean$TCdivAG=mutSpecAllMean$T_C.N/mutSpecAllMean$A_G.N
mutSpecAllMean[mutSpecAllMean$TCdivAG == "Inf" | mutSpecAllMean$TCdivAG == "NaN",]$TCdivAG = NA
cor.test(mutSpecAllMean$TCdivAG,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean$GAdivCT=mutSpecAllMean$G_A.N/mutSpecAllMean$C_T.N
mutSpecAllMean[mutSpecAllMean$GAdivCT == "Inf" | mutSpecAllMean$GAdivCT == "NaN" | is.na(mutSpecAllMean$GAdivCT),]$GAdivCT = NA
cor.test(mutSpecAllMean$GAdivCT,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]; N = as.character(paste("N", nrow(mutSpecAllMean), sep="")) #delete NA
f1a = ggscatter(mutSpecAllMean, x = "temperature", y = "T_C.N",
color = "#73514f", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 AH>GH") + stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1a
f1b1 = ggscatter(mutSpecAllMean, x = "temperature", y = "G_A.N",
color = "#055088", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 CH>TH")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1b1
f1b2 = ggscatter(mutSpecAllMean, x = "temperature", y = "C_T.N",
color = "#9c3d37", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 GH>AH")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1b2
f1c = ggscatter(mutSpecAllMean, x = "temperature", y = "TCdivAG",
color = "#814194", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 A_GdivT_C")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1c
f1d = ggscatter(mutSpecAllMean, x = "temperature", y = "GAdivCT",
color = "#8C99A6", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 C_TdivG_A")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1d
cor.test(mutSpecAllMean$A_T.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$A_G.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$A_C.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$T_A.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$T_G.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$T_C.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_A.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_T.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_C.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$C_A.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$C_T.N,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$C_G.N,mutSpecAllMean$matur_tm, method = 'spearman')
summary(lm(formula = temperature ~ scale(T_C.N) + scale(G_A.N), data = mutSpecAllMean))
summary(lm(formula = T_C.N ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = T_C.N ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = T_C.N ~ scale(temperature), data = mutSpecAllMean))
summary(lm(formula = G_A.N ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = G_A.N ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = G_A.N ~ scale(temperature), data = mutSpecAllMean))
mutSpecAllMeanNAzeroomit = mutSpecAllMean[!is.na(mutSpecAllMean$TCdivAG),]
mutSpecAllMeanNAzeroomit = mutSpecAllMeanNAzeroomit[mutSpecAllMeanNAzeroomit$TCdivAG != 0,]
mutSpecAllMeanNAzeroomit = mutSpecAllMeanNAzeroomit[!is.na(mutSpecAllMeanNAzeroomit$GAdivCT),]
mutSpecAllMeanNAzeroomit = mutSpecAllMeanNAzeroomit[mutSpecAllMeanNAzeroomit$GAdivCT != 0,]
summary(lm(formula = temperature ~ scale(T_C.N) + scale(G_A.N) + scale(TCdivAG) + scale(GAdivCT), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = TCdivAG ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = TCdivAG ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = GAdivCT ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = GAdivCT ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = TCdivAG ~ scale(temperature), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = GAdivCT ~ scale(temperature), data = mutSpecAllMeanNAzeroomit))
tree = read.tree('../Data/1raw/Fishes_Polymorphic_sp.nwk')
row.names(mutSpecAllMeanNAzeroomit) = mutSpecAllMeanNAzeroomit$Species
tree_pruned = treedata(tree, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$TCdivAG = as.numeric(as.character(data$TCdivAG))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(TCdivAG ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(log2(TCdivAG) ~ log2(temperature), data_comp, lambda="ML"))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
AllSynNuc = read.table("../data/1raw/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
AllSynNuc = AllSynNuc[AllSynNuc$Gene != 'ND6',]
AllSynNuc = aggregate(list(AllSynNuc$NeutralA,AllSynNuc$NeutralT,AllSynNuc$NeutralG,AllSynNuc$NeutralC), by = list(AllSynNuc$Species), FUN = sum)
names(AllSynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
AllSynNuc$FrA = AllSynNuc$NeutralA / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrT = AllSynNuc$NeutralT / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrG = AllSynNuc$NeutralG / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrC = AllSynNuc$NeutralC / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
matur = read.table('../Data/1raw/FishBaseMaturity_Tm.txt', header=T)
matur = matur %>% group_by(Species) %>% summarise(matur_tm = median(Tm))
AllSynNuc = merge(AllSynNuc, tm, by='Species', all.x=T)
AllSynNuc = merge(AllSynNuc, matur, by='Species', all.x=T)
nrow(AllSynNuc[!is.na(AllSynNuc$temperature),])
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrA, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrT, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrG, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrC, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrA, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrT, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrG, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$FrC, method = "spearman")
AllSynNuc$TG = AllSynNuc$FrT+AllSynNuc$FrG
AllSynNuc$AC = AllSynNuc$FrA+AllSynNuc$FrC
AllSynNuc$TG_ACSkew = (AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC); summary(AllSynNuc$TG_ACSkew)
AllSynNuc$AC_TGSkew = -(AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC); summary(AllSynNuc$AC_TGSkew) #OUR
AllSynNuc = AllSynNuc[!is.na(AllSynNuc$temperature),]; N = as.character(paste("N", nrow(AllSynNuc), sep="")) #delete NA
ggscatter(AllSynNuc, x = "temperature", y = "FrT",
color = "#e61a0b", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of A")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "FrG",
color = "#009414", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of C")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "FrC",
color = "#5c5c5c", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of G")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "FrA",
color = "#0918e6", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of T")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
ggscatter(AllSynNuc, x = "temperature", y = "AC_TGSkew",
color = "#c99bc9", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Mean annual water temperature, ?C", ylab="STG-SAC skew", ylim=c(0.1, 0.65), xlim=c(0,30))+stat_cor(method = "spearman", label.x = 2.5, label.y = 0.64, aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
summary(lm(FrT ~ scale(temperature)+scale(matur_tm), data = AllSynNuc))
summary(lm(FrT ~ log2(temperature + 2)*log2(matur_tm), data = AllSynNuc))  # keep it for presentation!!!
summary(lm(FrT ~ log2(temperature + 2)+log2(matur_tm), data = AllSynNuc))
summary(lm(FrG ~ log2(temperature + 2)+log2(matur_tm), data = AllSynNuc)) # strong
summary(lm(FrA ~ log2(temperature + 2)+log2(matur_tm), data = AllSynNuc)) # strong
summary(lm(AC_TGSkew ~ log2(temperature + 2)+log2(matur_tm), data = AllSynNuc))
summary(lm(AC_TGSkew ~ scale(temperature + 2)+scale(matur_tm), data = AllSynNuc))# ###PICS
summary(lm(AC_TGSkew ~ temperature, data = AllSynNuc))
#tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
tree = read.tree('../Data/1raw/Fishes_Polymorphic_sp.nwk')
row.names(AllSynNuc) = AllSynNuc$Species
tree_pruned = treedata(tree, AllSynNuc, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, AllSynNuc, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$AC_TGSkew = as.numeric(as.character(data$AC_TGSkew))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(AC_TGSkew ~ log2(temperature+2), data_comp, lambda="ML"))
summary(pgls(log2(temperature+2) ~ AC_TGSkew, data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ log2(temperature + 2) + log2(matur_tm), data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ temperature, data_comp, lambda="ML"))
summary(pgls(AC_TGSkew ~ temperature + matur_tm, data_comp, lambda="ML"))
AllSynNuc = AllSynNuc[!is.na(AllSynNuc$matur_tm),]; N = as.character(paste("N", nrow(AllSynNuc), sep=""))
medianTm = median(AllSynNuc[!is.na(AllSynNuc$matur_tm),]$matur_tm)
AllSynNuc$Longevity = "Na"
AllSynNuc[AllSynNuc$matur_tm < medianTm,]$Longevity = "ShortLived"
AllSynNuc[AllSynNuc$matur_tm >= medianTm,]$Longevity = "LongLived"
plot(AllSynNuc[AllSynNuc$Longevity == "ShortLived",]$temperature, AllSynNuc[AllSynNuc$Longevity == "ShortLived",]$AC_TGSkew, col="#4da36c", xlab="Mean annual water temperature, C?", ylab="STG-SAC skew", ylim=c(0.1, 0.65), xlim=c(0,30), pch = 16)
abline((0.331911-0.049196), 0.006172, col="#4da36c", lwd = 2)
par(new=TRUE)
plot(AllSynNuc[AllSynNuc$Longevity == "LongLived",]$temperature, AllSynNuc[AllSynNuc$Longevity == "LongLived",]$AC_TGSkew, col="#42cbf5", xlab="", ylab="", ylim=c(0.1, 0.65), xlim=c(0,30), pch = 16)
abline(0.331911, 0.006172, col="#42cbf5", lwd = 2)
legend("bottomright", legend=c( "Short time of maturation","Long time of maturation"), col=c("#4da36c","#42cbf5"), pch = 16)
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(vioplot)) install.packages("vioplot")
library("ggpubr")
library(vioplot)
###########Reading mutspec data
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
########AnAge data reading
AA = read.table("../Data/1raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
AA$temperature = AA$Temperature..K. - 273.15
BirbTemp =  read.table("../Data/1raw/body_temp.txt", header = TRUE)
BirbTemp$Class = "Aves"
ALL = merge(mutSpec, AA, all = T)
ALL = merge(ALL, BirbTemp, all = T)
####U tests
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(ALL[ALL$Class %in% colder,]$TCdivAG, ALL[ALL$Class %in% warmer,]$TCdivAG, paired=F)
ALLDIV = ALL[!is.na(ALL$A_G.N),]; ALLDIV$TCdivAG=ALLDIV$T_C.N/ALLDIV$A_G.N; ALLDIV[ALLDIV$TCdivAG == "Inf" | ALLDIV$TCdivAG == "NaN" | ALLDIV$TCdivAG == 0,]$TCdivAG  = NA; ALLDIV$TCdivAG = log2(ALLDIV$TCdivAG)
####U tests
colder <- c("Actinopterygii", "Amphibia", "Reptilia")
warmer <- c("Mammalia","Aves")
wilcox.test(ALLDIV[ALLDIV$Class %in% colder,]$TCdivAG, ALLDIV[ALLDIV$Class %in% warmer,]$TCdivAG, paired=F)
wilcox.test(ALL[ALL$Class %in% colder,]$temperature, ALL[ALL$Class %in% warmer,]$temperature, paired=F)
table(ALL[!is.na(ALL$temperature),]$Class)
table(ALLDIV[!is.na(ALLDIV$TCdivAG),]$Class)
