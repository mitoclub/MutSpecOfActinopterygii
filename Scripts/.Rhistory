f1c = ggscatter(mutSpecAllMean, x = "temperature", y = "AGdivTC",
color = "#814194", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 A_GdivT_C")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1c
dev.off()
f1c
cor.test(mutSpecAllMean$temperature,mutSpecAllMean$matur_tm, method = 'spearman')
summary(lm(formula = temperature ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecAllMean))
summary(lm(formula = matur_tm ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecAllMean))
summary(lm(formula = temperature ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecAllMean))
summary(lm(formula = matur_tm ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecAllMean))
summary(lm(formula = scale(matur_tm) ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecAllMean))
summary(lm(formula = matur_tm ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecAllMean))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
table(mutSpecCytB[!is.na(mutSpecCytB$temperature),]$Class)
mutSpecAllMean = mutSpec %>% group_by(Species, Class, temperature, matur_tm); mutSpecAllMean = mutSpecAllMean %>% summarise(A_C.SubstRate.heavy=mean(A_C.SubstRate.heavy), A_G.SubstRate.heavy=mean(A_G.SubstRate.heavy), A_T.SubstRate.heavy=mean(A_T.SubstRate.heavy), C_A.SubstRate.heavy=mean(C_A.SubstRate.heavy), C_G.SubstRate.heavy=mean(C_G.SubstRate.heavy), C_T.SubstRate.heavy=mean(C_T.SubstRate.heavy), G_A.SubstRate.heavy=mean(G_A.SubstRate.heavy), G_C.SubstRate.heavy=mean(G_C.SubstRate.heavy), G_T.SubstRate.heavy=mean(G_T.SubstRate.heavy), T_A.SubstRate.heavy=mean(T_A.SubstRate.heavy), T_C.SubstRate.heavy=mean(T_C.SubstRate.heavy), T_G.SubstRate.heavy=mean(T_G.SubstRate.heavy))
mutSpecAllMean = mutSpecAllMean[!is.na(mutSpecAllMean$C_T.SubstRate.heavy),]
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = c("A_C.h", "A_G.h", "A_T.h", "C_A.h", "C_G.h",
"C_T.h", "G_A.h", "G_C.h", "G_T.h", "T_A.h","T_C.h", "T_G.h"); names(averageMutSpec2) = c("Freq", "Subs")
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.pdf')
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
dev.off()
f1
cor.test(mutSpecCytB$A_G.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_A.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_C.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_T.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_G.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_A.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_C.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_T.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
nrow(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),])
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
mutSpecCytB$AGdivTC=mutSpecCytB$A_G.SubstRate.heavy/mutSpecCytB$T_C.SubstRate.heavy
mutSpecCytB$CTdivGA=mutSpecCytB$C_T.SubstRate.heavy/mutSpecCytB$G_A.SubstRate.heavy
mutSpecCytB[mutSpecCytB$AGdivTC == "Inf" | mutSpecCytB$AGdivTC == "NaN",]$AGdivTC = NA
mutSpecCytB[mutSpecCytB$CTdivGA == "Inf" | mutSpecCytB$CTdivGA == "NaN",]$CTdivGA = NA
cor.test(mutSpecCytB$AGdivTC,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$CTdivGA,mutSpecCytB$temperature, method = 'spearman')
mutSpecAllMean$AGdivTC=mutSpecAllMean$A_G.SubstRate.heavy/mutSpecAllMean$T_C.SubstRate.heavy
mutSpecAllMean$CTdivGA=mutSpecAllMean$C_T.SubstRate.heavy/mutSpecAllMean$G_A.SubstRate.heavy
mutSpecAllMean[mutSpecAllMean$AGdivTC == "Inf" | mutSpecAllMean$AGdivTC == "NaN",]$AGdivTC = NA
mutSpecAllMean[mutSpecAllMean$CTdivGA == "Inf" | mutSpecAllMean$CTdivGA == "NaN",]$CTdivGA = NA
cor.test(mutSpecAllMean$AGdivTC,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$CTdivGA,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]; N = as.character(paste("N", nrow(mutSpecAllMean), sep="")) #delete NA
pdf('../Figures/PolymorphicData.Actinopterygii.pdf')
f1a = ggscatter(mutSpecAllMean, x = "temperature", y = "A_G.SubstRate.heavy",
color = "#73514f", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 AH>GH") + stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1a
f1b = ggscatter(mutSpecAllMean, x = "temperature", y = "C_T.SubstRate.heavy",
color = "#055088", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 CH>TH")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1b
dev.off()
f1a
f1b
pdf('../Figures/PolymorphicData.Actinopterygii.pdf')
f1c = ggscatter(mutSpecAllMean, x = "temperature", y = "AGdivTC",
color = "#814194", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 A_GdivT_C")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1c
dev.off()
f1c
pdf('../Figures/PolymorphicData.Actinopterygii.A_GdivT_C.pdf')
f1c = ggscatter(mutSpecAllMean, x = "temperature", y = "AGdivTC",
color = "#814194", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 A_GdivT_C")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1c
dev.off()
f1c
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
table(mutSpecCytB[!is.na(mutSpecCytB$temperature),]$Class)
mutSpecAllMean = mutSpec %>% group_by(Species, Class, temperature, matur_tm); mutSpecAllMean = mutSpecAllMean %>% summarise(A_C.SubstRate.heavy=mean(A_C.SubstRate.heavy), A_G.SubstRate.heavy=mean(A_G.SubstRate.heavy), A_T.SubstRate.heavy=mean(A_T.SubstRate.heavy), C_A.SubstRate.heavy=mean(C_A.SubstRate.heavy), C_G.SubstRate.heavy=mean(C_G.SubstRate.heavy), C_T.SubstRate.heavy=mean(C_T.SubstRate.heavy), G_A.SubstRate.heavy=mean(G_A.SubstRate.heavy), G_C.SubstRate.heavy=mean(G_C.SubstRate.heavy), G_T.SubstRate.heavy=mean(G_T.SubstRate.heavy), T_A.SubstRate.heavy=mean(T_A.SubstRate.heavy), T_C.SubstRate.heavy=mean(T_C.SubstRate.heavy), T_G.SubstRate.heavy=mean(T_G.SubstRate.heavy))
mutSpecAllMean = mutSpecAllMean[!is.na(mutSpecAllMean$C_T.SubstRate.heavy),]
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = c("A_C.h", "A_G.h", "A_T.h", "C_A.h", "C_G.h",
"C_T.h", "G_A.h", "G_C.h", "G_T.h", "T_A.h","T_C.h", "T_G.h"); names(averageMutSpec2) = c("Freq", "Subs")
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.pdf')
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
dev.off()
f1
cor.test(mutSpecCytB$A_G.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_A.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_C.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_T.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_G.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_A.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_C.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_T.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
nrow(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),])
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
mutSpecCytB$AGdivTC=mutSpecCytB$A_G.SubstRate.heavy/mutSpecCytB$T_C.SubstRate.heavy
mutSpecCytB$CTdivGA=mutSpecCytB$C_T.SubstRate.heavy/mutSpecCytB$G_A.SubstRate.heavy
mutSpecCytB[mutSpecCytB$AGdivTC == "Inf" | mutSpecCytB$AGdivTC == "NaN",]$AGdivTC = NA
mutSpecCytB[mutSpecCytB$CTdivGA == "Inf" | mutSpecCytB$CTdivGA == "NaN",]$CTdivGA = NA
cor.test(mutSpecCytB$AGdivTC,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$CTdivGA,mutSpecCytB$temperature, method = 'spearman')
mutSpecAllMean$AGdivTC=mutSpecAllMean$A_G.SubstRate.heavy/mutSpecAllMean$T_C.SubstRate.heavy
mutSpecAllMean$CTdivGA=mutSpecAllMean$C_T.SubstRate.heavy/mutSpecAllMean$G_A.SubstRate.heavy
mutSpecAllMean[mutSpecAllMean$AGdivTC == "Inf" | mutSpecAllMean$AGdivTC == "NaN",]$AGdivTC = NA
mutSpecAllMean[mutSpecAllMean$CTdivGA == "Inf" | mutSpecAllMean$CTdivGA == "NaN",]$CTdivGA = NA
cor.test(mutSpecAllMean$AGdivTC,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$CTdivGA,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]; N = as.character(paste("N", nrow(mutSpecAllMean), sep="")) #delete NA
pdf('../Figures/PolymorphicData.Actinopterygii.pdf')
f1a = ggscatter(mutSpecAllMean, x = "temperature", y = "A_G.SubstRate.heavy",
color = "#73514f", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 AH>GH") + stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1a
f1b = ggscatter(mutSpecAllMean, x = "temperature", y = "C_T.SubstRate.heavy",
color = "#055088", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 CH>TH")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1b
dev.off()
f1a
f1b
pdf('../Figures/PolymorphicData.Actinopterygii.A_GdivT_C.pdf')
f1c = ggscatter(mutSpecAllMean, x = "temperature", y = "AGdivTC",
color = "#814194", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 A_GdivT_C")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1c
dev.off()
f1c
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
AllSynNuc = read.table("../data/1raw/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
AllSynNuc = AllSynNuc[AllSynNuc$Gene != 'ND6',]
AllSynNuc = aggregate(list(AllSynNuc$NeutralA,AllSynNuc$NeutralT,AllSynNuc$NeutralG,AllSynNuc$NeutralC), by = list(AllSynNuc$Species), FUN = sum)
names(AllSynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
AllSynNuc$FrT.heavy = AllSynNuc$NeutralA / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrA.heavy = AllSynNuc$NeutralT / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrC.heavy = AllSynNuc$NeutralG / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrG.heavy = AllSynNuc$NeutralC / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
matur = read.table('../Data/1raw/FishBaseMaturity_Tm.txt', header=T)
matur = matur %>% group_by(Species) %>% summarise(matur_tm = median(Tm))
AllSynNuc = merge(AllSynNuc, tm, by='Species', all.x=T)
AllSynNuc = merge(AllSynNuc, matur, by='Species', all.x=T)
nrow(AllSynNuc[!is.na(AllSynNuc$temperature),])
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrA.heavy, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrT.heavy, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrG.heavy, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrC.heavy, method = "spearman")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
AllSynNuc = read.table("../data/1raw/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
AllSynNuc = AllSynNuc[AllSynNuc$Gene != 'ND6',]
AllSynNuc = aggregate(list(AllSynNuc$NeutralA,AllSynNuc$NeutralT,AllSynNuc$NeutralG,AllSynNuc$NeutralC), by = list(AllSynNuc$Species), FUN = sum)
names(AllSynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
AllSynNuc$FrT.heavy = AllSynNuc$NeutralA / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrA.heavy = AllSynNuc$NeutralT / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrC.heavy = AllSynNuc$NeutralG / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrG.heavy = AllSynNuc$NeutralC / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
matur = read.table('../Data/1raw/FishBaseMaturity_Tm.txt', header=T)
matur = matur %>% group_by(Species) %>% summarise(matur_tm = median(Tm))
AllSynNuc = merge(AllSynNuc, tm, by='Species', all.x=T)
AllSynNuc = merge(AllSynNuc, matur, by='Species', all.x=T)
nrow(AllSynNuc[!is.na(AllSynNuc$temperature),])
View(AllSynNuc)
View(AllSynNuc)
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrA.heavy, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrT.heavy, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrG.heavy, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$FrC.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrA.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrT.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrG.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrC.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrA.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrT.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrG.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrC.heavy, method = "spearman")
AllSynNuc$TtoCSkew.heavy = (AllSynNuc$FrT.heavy-AllSynNuc$FrC.heavy)/(AllSynNuc$FrT.heavy+AllSynNuc$FrC.heavy)
AllSynNuc$GtoASkew.heavy = (AllSynNuc$FrG.heavy-AllSynNuc$FrA.heavy)/(AllSynNuc$FrG.heavy+AllSynNuc$FrA.heavy)
cor.test(log2(AllSynNuc$temperature),AllSynNuc$TtoCSkew.heavy, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$GtoASkew.heavy, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$TtoCSkew.heavy, method = "spearman")
cor.test(log2(AllSynNuc$matur_tm),AllSynNuc$GtoASkew.heavy, method = "spearman")
AllSynNuc$TG = AllSynNuc$FrT.heavy+AllSynNuc$FrG.heavy
AllSynNuc$AC = AllSynNuc$FrA.heavy+AllSynNuc$FrC.heavy
AllSynNuc$TG_ACSkew.heavy = (AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC); summary(AllSynNuc$TG_ACSkew.heavy)
AllSynNuc$TtoCSkew.heavy = (AllSynNuc$FrT.heavy-AllSynNuc$FrC.heavy)/(AllSynNuc$FrT.heavy+AllSynNuc$FrC.heavy)
AllSynNuc$GtoASkew.heavy = (AllSynNuc$FrG.heavy-AllSynNuc$FrA.heavy)/(AllSynNuc$FrG.heavy+AllSynNuc$FrA.heavy)
cor.test(log2(AllSynNuc$temperature),AllSynNuc$TtoCSkew.heavy, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$GtoASkew.heavy, method = "spearman")
AllSynNuc$TG = AllSynNuc$FrT.heavy+AllSynNuc$FrG.heavy
AllSynNuc$AC = AllSynNuc$FrA.heavy+AllSynNuc$FrC.heavy
AllSynNuc$TG_ACSkew.heavy = (AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC); summary(AllSynNuc$TG_ACSkew.heavy)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
AllSynNuc = read.table("../data/1raw/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
AllSynNuc = AllSynNuc[AllSynNuc$Gene != 'ND6',]
AllSynNuc = aggregate(list(AllSynNuc$NeutralA,AllSynNuc$NeutralT,AllSynNuc$NeutralG,AllSynNuc$NeutralC), by = list(AllSynNuc$Species), FUN = sum)
names(AllSynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
AllSynNuc$FrT.heavy = AllSynNuc$NeutralA / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrA.heavy = AllSynNuc$NeutralT / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrC.heavy = AllSynNuc$NeutralG / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
AllSynNuc$FrG.heavy = AllSynNuc$NeutralC / (AllSynNuc$NeutralA + AllSynNuc$NeutralT + AllSynNuc$NeutralG + AllSynNuc$NeutralC)
tm = read.table('../Data/1raw/FishBaseTemperature.txt', header=T)
tm = tm %>% group_by(Species) %>% summarise(temperature = median(Temperature))
matur = read.table('../Data/1raw/FishBaseMaturity_Tm.txt', header=T)
matur = matur %>% group_by(Species) %>% summarise(matur_tm = median(Tm))
AllSynNuc = merge(AllSynNuc, tm, by='Species', all.x=T)
AllSynNuc = merge(AllSynNuc, matur, by='Species', all.x=T)
nrow(AllSynNuc[!is.na(AllSynNuc$temperature),])
cor.test(AllSynNuc$temperature,AllSynNuc$FrA.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrT.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrG.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrC.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrA.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrT.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrG.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrC.heavy, method = "spearman")
AllSynNuc$TtoCSkew.heavy = (AllSynNuc$FrT.heavy-AllSynNuc$FrC.heavy)/(AllSynNuc$FrT.heavy+AllSynNuc$FrC.heavy)
AllSynNuc$GtoASkew.heavy = (AllSynNuc$FrG.heavy-AllSynNuc$FrA.heavy)/(AllSynNuc$FrG.heavy+AllSynNuc$FrA.heavy)
cor.test(log2(AllSynNuc$temperature),AllSynNuc$TtoCSkew.heavy, method = "spearman")
cor.test(log2(AllSynNuc$temperature),AllSynNuc$GtoASkew.heavy, method = "spearman")
AllSynNuc$TG = AllSynNuc$FrT.heavy+AllSynNuc$FrG.heavy
AllSynNuc$AC = AllSynNuc$FrA.heavy+AllSynNuc$FrC.heavy
AllSynNuc$TG_ACSkew.heavy = (AllSynNuc$TG-AllSynNuc$AC)/(AllSynNuc$TG+AllSynNuc$AC)
AllSynNuc = AllSynNuc[!is.na(AllSynNuc$temperature),]; N = as.character(paste("N", nrow(AllSynNuc), sep="")) #delete NA
pdf("../Figures/WholeGenomeData.Actinopterygii.pdf")
f1= ggscatter(AllSynNuc, x = "temperature", y = "FrA.heavy",
color = "#e61a0b", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of AH")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1
f2=ggscatter(AllSynNuc, x = "temperature", y = "FrC.heavy",
color = "#009414", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of CH")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f2
f3=ggscatter(AllSynNuc, x = "temperature", y = "FrG.heavy",
color = "#5c5c5c", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of GH")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f3
f4=ggscatter(AllSynNuc, x = "temperature", y = "FrT.heavy",
color = "#0918e6", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="Whole genome neutral fraction of TH")+stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f4
dev.off()
f1
f2
f3
f4
pdf("../Figures/WholeGenomeData.Actinopterygii.TG-SACskew.pdf", width = 7, height = 8.5)
f5=ggscatter(AllSynNuc, x = "temperature", y = "TG_ACSkew.heavy",
color = "#c99bc9", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Mean annual water temperature, ?C",  ylim=c(0.1, 0.65), xlim=c(0,30))+stat_cor(method = "spearman", label.x = 2.5, label.y = 0.64, aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f5
dev.off()
f5
summary(lm(GtoASkew.heavy ~ temperature, data = AllSynNuc))
summary(lm(TtoCSkew.heavy ~ temperature, data = AllSynNuc))
tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
row.names(AllSynNuc) = AllSynNuc$Species
tree_pruned = treedata(tree, AllSynNuc, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, AllSynNuc, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$TG_ACSkew.heavy = as.numeric(as.character(data$TG_ACSkew.heavy))
data$GtoASkew.heavy = as.numeric(as.character(data$GtoASkew.heavy))
data$TtoCSkew.heavy = as.numeric(as.character(data$TtoCSkew.heavy))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(TG_ACSkew.heavy ~ temperature, data_comp, lambda="ML"))
summary(pgls(TG_ACSkew.heavy ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(GtoASkew.heavy ~ temperature, data_comp, lambda="ML"))
summary(pgls(TtoCSkew.heavy ~ temperature, data_comp, lambda="ML"))
summary(pgls(TG_ACSkew.heavy ~ temperature, data_comp, lambda="ML"))
summary(pgls(GtoASkew.heavy ~ temperature, data_comp, lambda="ML"))
summary(pgls(TtoCSkew.heavy ~ temperature, data_comp, lambda="ML"))
summary(pgls(TG_ACSkew.heavy ~ temperature, data_comp, lambda="ML"))
View(data_comp)
summary(pgls(GtoASkew.heavy ~ Scale(temperature), data_comp, lambda="ML"))
summary(pgls(GtoASkew.heavy ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(GtoASkew.heavy ~ log2(temperature+2), data_comp, lambda="ML"))
summary(pgls(GtoASkew.heavy ~ temperature, data_comp, lambda="ML"))
summary(pgls(TtoCSkew.heavy ~ temperature, data_comp, lambda="ML"))
summary(pgls(TG_ACSkew.heavy ~ temperature, data_comp, lambda="ML"))
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrA.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrT.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrG.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrC.heavy, method = "spearman")
nrow(AllSynNuc[!is.na(AllSynNuc$temperature),])
nrow(AllSynNuc[!is.na(AllSynNuc$matur_tm),])
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrA.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrT.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrG.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrC.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$TtoCSkew.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$GtoASkew.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$TtoCSkew.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$GtoASkew.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$TtoCSkew.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$GtoASkew.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$TtoCSkew.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$GtoASkew.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrA.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrT.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrG.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$FrC.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrA.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrT.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrG.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$FrC.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$TtoCSkew.heavy, method = "spearman")
cor.test(AllSynNuc$temperature,AllSynNuc$GtoASkew.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$TtoCSkew.heavy, method = "spearman")
cor.test(AllSynNuc$matur_tm,AllSynNuc$GtoASkew.heavy, method = "spearman")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
table(mutSpecCytB[!is.na(mutSpecCytB$temperature),]$Class)
mutSpecAllMean = mutSpec %>% group_by(Species, Class, temperature, matur_tm); mutSpecAllMean = mutSpecAllMean %>% summarise(A_C.SubstRate.heavy=mean(A_C.SubstRate.heavy), A_G.SubstRate.heavy=mean(A_G.SubstRate.heavy), A_T.SubstRate.heavy=mean(A_T.SubstRate.heavy), C_A.SubstRate.heavy=mean(C_A.SubstRate.heavy), C_G.SubstRate.heavy=mean(C_G.SubstRate.heavy), C_T.SubstRate.heavy=mean(C_T.SubstRate.heavy), G_A.SubstRate.heavy=mean(G_A.SubstRate.heavy), G_C.SubstRate.heavy=mean(G_C.SubstRate.heavy), G_T.SubstRate.heavy=mean(G_T.SubstRate.heavy), T_A.SubstRate.heavy=mean(T_A.SubstRate.heavy), T_C.SubstRate.heavy=mean(T_C.SubstRate.heavy), T_G.SubstRate.heavy=mean(T_G.SubstRate.heavy))
mutSpecAllMean = mutSpecAllMean[!is.na(mutSpecAllMean$C_T.SubstRate.heavy),]
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = c("A_C.h", "A_G.h", "A_T.h", "C_A.h", "C_G.h",
"C_T.h", "G_A.h", "G_C.h", "G_T.h", "T_A.h","T_C.h", "T_G.h"); names(averageMutSpec2) = c("Freq", "Subs")
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.pdf')
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
dev.off()
f1
cor.test(mutSpecCytB$A_G.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_A.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_C.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_T.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_G.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_A.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_C.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_T.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
nrow(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),])
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
mutSpecCytB$AGdivTC=mutSpecCytB$A_G.SubstRate.heavy/mutSpecCytB$T_C.SubstRate.heavy
mutSpecCytB$CTdivGA=mutSpecCytB$C_T.SubstRate.heavy/mutSpecCytB$G_A.SubstRate.heavy
mutSpecCytB[mutSpecCytB$AGdivTC == "Inf" | mutSpecCytB$AGdivTC == "NaN",]$AGdivTC = NA
mutSpecCytB[mutSpecCytB$CTdivGA == "Inf" | mutSpecCytB$CTdivGA == "NaN",]$CTdivGA = NA
cor.test(mutSpecCytB$AGdivTC,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$CTdivGA,mutSpecCytB$temperature, method = 'spearman')
mutSpecAllMean$AGdivTC=mutSpecAllMean$A_G.SubstRate.heavy/mutSpecAllMean$T_C.SubstRate.heavy
mutSpecAllMean$CTdivGA=mutSpecAllMean$C_T.SubstRate.heavy/mutSpecAllMean$G_A.SubstRate.heavy
mutSpecAllMean[mutSpecAllMean$AGdivTC == "Inf" | mutSpecAllMean$AGdivTC == "NaN",]$AGdivTC = NA
mutSpecAllMean[mutSpecAllMean$CTdivGA == "Inf" | mutSpecAllMean$CTdivGA == "NaN",]$CTdivGA = NA
cor.test(mutSpecAllMean$AGdivTC,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$CTdivGA,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]; N = as.character(paste("N", nrow(mutSpecAllMean), sep="")) #delete NA
f1a = ggscatter(mutSpecAllMean, x = "temperature", y = "A_G.SubstRate.heavy",
color = "#73514f", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
xlab="Median annual water temperature, ?C", ylab="log2 AH>GH") + stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1a
knitr::opts_chunk$set(echo = TRUE)
cor.test(log2(mutSpecAllMean$A_G.SubstRate.heavy),mutSpecAllMean$temperature, method = 'spearman')
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
table(mutSpecCytB[!is.na(mutSpecCytB$temperature),]$Class)
mutSpecAllMean = mutSpec %>% group_by(Species, Class, temperature, matur_tm); mutSpecAllMean = mutSpecAllMean %>% summarise(A_C.SubstRate.heavy=mean(A_C.SubstRate.heavy), A_G.SubstRate.heavy=mean(A_G.SubstRate.heavy), A_T.SubstRate.heavy=mean(A_T.SubstRate.heavy), C_A.SubstRate.heavy=mean(C_A.SubstRate.heavy), C_G.SubstRate.heavy=mean(C_G.SubstRate.heavy), C_T.SubstRate.heavy=mean(C_T.SubstRate.heavy), G_A.SubstRate.heavy=mean(G_A.SubstRate.heavy), G_C.SubstRate.heavy=mean(G_C.SubstRate.heavy), G_T.SubstRate.heavy=mean(G_T.SubstRate.heavy), T_A.SubstRate.heavy=mean(T_A.SubstRate.heavy), T_C.SubstRate.heavy=mean(T_C.SubstRate.heavy), T_G.SubstRate.heavy=mean(T_G.SubstRate.heavy))
mutSpecAllMean = mutSpecAllMean[!is.na(mutSpecAllMean$C_T.SubstRate.heavy),]
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = c("A_C.h", "A_G.h", "A_T.h", "C_A.h", "C_G.h",
"C_T.h", "G_A.h", "G_C.h", "G_T.h", "T_A.h","T_C.h", "T_G.h"); names(averageMutSpec2) = c("Freq", "Subs")
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.pdf')
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
dev.off()
f1
cor.test(mutSpecCytB$A_G.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_A.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_C.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_T.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(log2(mutSpecAllMean$A_G.SubstRate.heavy),mutSpecAllMean$temperature, method = 'spearman')
