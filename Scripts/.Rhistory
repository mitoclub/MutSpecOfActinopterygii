cor.test(mutSpecAllMeanBySums$G_A.SubstRate.heavy,mutSpecAllMeanBySums$temperature, method = 'spearman')
cor.test(mutSpecAllMeanBySums$T_C.SubstRate.heavy,mutSpecAllMeanBySums$temperature, method = 'spearman')
cor.test(mutSpecAllMeanBySums$C_T.SubstRate.heavy,mutSpecAllMeanBySums$temperature, method = 'spearman')
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]; summary(averageMutSpec2)
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = row.names(averageMutSpec2); names(averageMutSpec2) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#036a5b", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#9c3d37", "#055088", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#73514f", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
View(averageMutSpec2)
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]; summary(averageMutSpec2)
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = row.names(averageMutSpec2); names(averageMutSpec2) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
View(averageMutSpec2)
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]; summary(averageMutSpec2)
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = row.names(averageMutSpec2); names(averageMutSpec2) = c("Freq", "Subs")
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.pdf')
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
dev.off()
mutSpecAllMean$AGdivTC=mutSpecAllMean$A_G.SubstRate.heavy/mutSpecAllMean$T_C.SubstRate.heavy
mutSpecAllMean[mutSpecAllMean$AGdivTC == "Inf" | mutSpecAllMean$AGdivTC == "NaN",]$AGdivTC = NA
cor.test(mutSpecAllMean$AGdivTC,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]; N = as.character(paste("N", nrow(mutSpecAllMean), sep="")) #delete NA
f1a = ggscatter(mutSpecAllMean, x = "temperature", y = "A_G.SubstRate.heavy",
color = "#73514f", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 AH>GH") + stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1a
f1b1 = ggscatter(mutSpecAllMean, x = "temperature", y = "C_T.SubstRate.heavy",
color = "#055088", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 CH>TH")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1b1
f1b2 = ggscatter(mutSpecAllMean, x = "temperature", y = "G_A.SubstRate.heavy",
color = "#9c3d37", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 GH>AH")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1b2
f1c = ggscatter(mutSpecAllMean, x = "temperature", y = "AGdivTC",
color = "#814194", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 A_GdivT_C")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1c
cor.test(mutSpecAllMean$A_G.SubstRate.heavy,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_A.SubstRate.heavy,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_C.SubstRate.heavy,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$C_G.SubstRate.heavy,mutSpecAllMean$matur_tm, method = 'spearman')
mutSpecAllMeanNAzeroomit = mutSpecAllMean[!is.na(mutSpecAllMean$AGdivTC),]
summary(lm(formula = temperature ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecAllMean))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature), data = mutSpecAllMean))
mutSpecAllMeanNAzeroomit = mutSpecAllMean[!is.na(mutSpecAllMean$AGdivTC),]
mutSpecAllMeanNAzeroomit = mutSpecAllMeanNAzeroomit[mutSpecAllMeanNAzeroomit$AGdivTC != 0,]
summary(lm(formula = AGdivTC ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = AGdivTC ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = AGdivTC ~ scale(temperature), data = mutSpecAllMeanNAzeroomit))
tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
row.names(mutSpecAllMeanNAzeroomit) = mutSpecAllMeanNAzeroomit$Species
tree_pruned = treedata(tree, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$TCdivAG = as.numeric(as.character(data$AGdivTC))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(AGdivTC ~ scale(temperature), data_comp, lambda="ML"))
tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
row.names(mutSpecAllMeanNAzeroomit) = mutSpecAllMeanNAzeroomit$Species
tree_pruned = treedata(tree, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$AGdivTC = as.numeric(as.character(data$AGdivTC))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(AGdivTC ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(log2(AGdivTC) ~ log2(temperature), data_comp, lambda="ML"))
tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
row.names(mutSpecAllMeanNAzeroomit) = mutSpecAllMeanNAzeroomit$Species
tree_pruned = treedata(tree, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$AGdivTC = as.numeric(as.character(data$AGdivTC))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(AGdivTC ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(log2(AGdivTC) ~ log2(temperature), data_comp, lambda="ML"))
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]; summary(averageMutSpec2)
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = row.names(averageMutSpec2); names(averageMutSpec2) = c("Freq", "Subs")
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.pdf')
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
dev.off()
f1
row.names(averageMutSpec1)
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]; summary(averageMutSpec1)
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.heavy", "A_T.heavy", "A_C.heavy", "T_G.heavy", "T_A.heavy", "T_C.heavy", "G_T.heavy", "G_C.heavy", "G_A.heavy", "C_G.heavy", "C_T.heavy", "C_A.heavy"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]; summary(averageMutSpec1)
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
averageMutSpec
averageMutSpec1
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]; summary(averageMutSpec1)
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]
summary(averageMutSpec1)
summary(averageMutSpec1)
averageMutSpec1
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]; summary(averageMutSpec1)
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
table(mutSpecCytB[!is.na(mutSpecCytB$temperature),]$Class)
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
View(averageMutSpec1)
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]
View(averageMutSpec1)
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean));
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]; summary(averageMutSpec2)
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean));
averageMutSpec2
row.names(averageMutSpec2)
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]; summary(averageMutSpec2)
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = c("A_C.h", "A_G.h", "A_T.h", "C_A.h", "C_G.h",
"C_T.h", "G_A.h", "G_C.h", "G_T.h", "T_A.h","T_C.h", "T_G.h"); names(averageMutSpec2) = c("Freq", "Subs")
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.pdf')
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
dev.off()
f1
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = c("A_C.h", "A_G.h", "A_T.h", "C_A.h", "C_G.h",
"C_T.h", "G_A.h", "G_C.h", "G_T.h", "T_A.h","T_C.h", "T_G.h"); names(averageMutSpec2) = c("Freq", "Subs")
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.pdf')
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
dev.off()
f1
row.names(averageMutSpec3)
averageMutSpec3 = mutSpecAllMeanBySums[,19:30]; summary(averageMutSpec3)
averageMutSpec3 = as.data.frame(apply(averageMutSpec3, 2, mean)); averageMutSpec3$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec3) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec3, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
averageMutSpec3 = mutSpecAllMeanBySums[,19:30]
averageMutSpec3 = as.data.frame(apply(averageMutSpec3, 2, mean)); averageMutSpec3$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec3) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec3, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
knitr::opts_chunk$set(echo = TRUE)
mutSpecCytB$AGdivTC=mutSpecCytB$A_G.SubstRate.heavy/mutSpecCytB$T_C.SubstRate.heavy
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
table(mutSpecCytB[!is.na(mutSpecCytB$temperature),]$Class)
mutSpecAllMean = mutSpec %>% group_by(Species, Class, temperature, matur_tm); mutSpecAllMean = mutSpecAllMean %>% summarise(A_C.SubstRate.heavy=mean(A_C.SubstRate.heavy), A_G.SubstRate.heavy=mean(A_G.SubstRate.heavy), A_T.SubstRate.heavy=mean(A_T.SubstRate.heavy), C_A.SubstRate.heavy=mean(C_A.SubstRate.heavy), C_G.SubstRate.heavy=mean(C_G.SubstRate.heavy), C_T.SubstRate.heavy=mean(C_T.SubstRate.heavy), G_A.SubstRate.heavy=mean(G_A.SubstRate.heavy), G_C.SubstRate.heavy=mean(G_C.SubstRate.heavy), G_T.SubstRate.heavy=mean(G_T.SubstRate.heavy), T_A.SubstRate.heavy=mean(T_A.SubstRate.heavy), T_C.SubstRate.heavy=mean(T_C.SubstRate.heavy), T_G.SubstRate.heavy=mean(T_G.SubstRate.heavy))
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
mutSpecAllMeanBySums = mutSpec %>% group_by(Species, temperature); mutSpecAllMeanBySums = mutSpecAllMeanBySums %>% summarise(T.heavy=sum(T.heavy), A.heavy=sum(A.heavy), C.heavy=sum(C.heavy), G.heavy=sum(G.heavy), A_G.heavy=sum(A_G.heavy), A_T.heavy=sum(A_T.heavy), A_C.heavy=sum(A_C.heavy), T_G.heavy=sum(T_G.heavy), T_A.heavy=sum(T_A.heavy), T_C.heavy=sum(T_C.heavy), G_T.heavy=sum(G_T.heavy), G_C.heavy=sum(G_C.heavy), G_A.heavy= sum(G_A.heavy), C_G.heavy=sum(C_G.heavy), C_T.heavy=sum(C_T.heavy), C_A.heavy=sum(C_A.heavy)) %>% ungroup()
mutSpecAllMeanBySums$A_G.SubstRate.heavy=mutSpecAllMeanBySums$A_G.heavy/mutSpecAllMeanBySums$A.heavy
mutSpecAllMeanBySums$A_T.SubstRate.heavy=mutSpecAllMeanBySums$A_T.heavy/mutSpecAllMeanBySums$A.heavy
mutSpecAllMeanBySums$A_C.SubstRate.heavy=mutSpecAllMeanBySums$A_C.heavy/mutSpecAllMeanBySums$A.heavy
mutSpecAllMeanBySums$T_G.SubstRate.heavy=mutSpecAllMeanBySums$T_G.heavy/mutSpecAllMeanBySums$T.heavy
mutSpecAllMeanBySums$T_A.SubstRate.heavy=mutSpecAllMeanBySums$T_A.heavy/mutSpecAllMeanBySums$T.heavy
mutSpecAllMeanBySums$T_C.SubstRate.heavy=mutSpecAllMeanBySums$T_C.heavy/mutSpecAllMeanBySums$T.heavy
mutSpecAllMeanBySums$G_T.SubstRate.heavy=mutSpecAllMeanBySums$G_T.heavy/mutSpecAllMeanBySums$G.heavy
mutSpecAllMeanBySums$G_C.SubstRate.heavy=mutSpecAllMeanBySums$G_C.heavy/mutSpecAllMeanBySums$G.heavy
mutSpecAllMeanBySums$G_A.SubstRate.heavy=mutSpecAllMeanBySums$G_A.heavy/mutSpecAllMeanBySums$G.heavy
mutSpecAllMeanBySums$C_G.SubstRate.heavy=mutSpecAllMeanBySums$C_G.heavy/mutSpecAllMeanBySums$C.heavy
mutSpecAllMeanBySums$C_T.SubstRate.heavy=mutSpecAllMeanBySums$C_T.heavy/mutSpecAllMeanBySums$C.heavy
mutSpecAllMeanBySums$C_A.SubstRate.heavy=mutSpecAllMeanBySums$C_A.heavy/mutSpecAllMeanBySums$C.heavy
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = c("A_C.h", "A_G.h", "A_T.h", "C_A.h", "C_G.h",
"C_T.h", "G_A.h", "G_C.h", "G_T.h", "T_A.h","T_C.h", "T_G.h"); names(averageMutSpec2) = c("Freq", "Subs")
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.pdf')
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
dev.off()
f1
averageMutSpec3 = mutSpecAllMeanBySums[,19:30]
averageMutSpec3 = as.data.frame(apply(averageMutSpec3, 2, mean)); averageMutSpec3$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec3) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec3, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
cor.test(mutSpecCytB$A_G.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_A.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_C.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_T.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_G.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_A.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_C.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_T.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMeanBySums$A_G.SubstRate.heavy,mutSpecAllMeanBySums$temperature, method = 'spearman')
cor.test(mutSpecAllMeanBySums$G_A.SubstRate.heavy,mutSpecAllMeanBySums$temperature, method = 'spearman')
cor.test(mutSpecAllMeanBySums$T_C.SubstRate.heavy,mutSpecAllMeanBySums$temperature, method = 'spearman')
cor.test(mutSpecAllMeanBySums$C_T.SubstRate.heavy,mutSpecAllMeanBySums$temperature, method = 'spearman')
mutSpecCytB$AGdivTC=mutSpecCytB$A_G.SubstRate.heavy/mutSpecCytB$T_C.SubstRate.heavy
mutSpecCytB[mutSpecCytB$AGdivTC == "Inf" | mutSpecCytB$AGdivTC == "NaN",]$AGdivTC = NA
cor.test(mutSpecCytB$AGdivTC,mutSpecCytB$temperature, method = 'spearman')
mutSpecAllMean$AGdivTC=mutSpecAllMean$A_G.SubstRate.heavy/mutSpecAllMean$T_C.SubstRate.heavy
mutSpecAllMean[mutSpecAllMean$AGdivTC == "Inf" | mutSpecAllMean$AGdivTC == "NaN",]$AGdivTC = NA
cor.test(mutSpecAllMean$AGdivTC,mutSpecAllMean$temperature, method = 'spearman')
summary(lm(formula = temperature ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecCytB))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) * scale(matur_tm), data = mutSpecCytB))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) + scale(matur_tm), data = mutSpecCytB))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature), data = mutSpecCytB))
mutSpecCytBNAzeroomit = mutSpecCytB[!is.na(mutSpecCytB$AGdivTC),]
mutSpecCytBNAzeroomit = mutSpecCytBNAzeroomit[mutSpecCytBNAzeroomit$AGdivTC != 0,]
summary(lm(formula = AGdivTC ~ scale(temperature) * scale(matur_tm), data = mutSpecCytBNAzeroomit))
summary(lm(formula = AGdivTC ~ scale(temperature) + scale(matur_tm), data = mutSpecCytBNAzeroomit))
summary(lm(formula = AGdivTC ~ scale(temperature), data = mutSpecCytBNAzeroomit))
summary(lm(formula = temperature ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecAllMean))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature), data = mutSpecAllMean))
mutSpecAllMeanNAzeroomit = mutSpecAllMean[!is.na(mutSpecAllMean$AGdivTC),]
mutSpecAllMeanNAzeroomit = mutSpecAllMeanNAzeroomit[mutSpecAllMeanNAzeroomit$AGdivTC != 0,]
summary(lm(formula = AGdivTC ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = AGdivTC ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = AGdivTC ~ scale(temperature), data = mutSpecAllMeanNAzeroomit))
tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
row.names(mutSpecCytBNAzeroomit) = mutSpecCytBNAzeroomit$Species
tree_pruned = treedata(tree, mutSpecCytBNAzeroomit, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, mutSpecCytBNAzeroomit, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$AGdivTC = as.numeric(as.character(data$AGdivTC))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(AGdivTC ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(log2(AGdivTC) ~ log2(temperature), data_comp, lambda="ML"))
tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
row.names(mutSpecAllMeanNAzeroomit) = mutSpecAllMeanNAzeroomit$Species
tree_pruned = treedata(tree, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, mutSpecAllMeanNAzeroomit, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$AGdivTC = as.numeric(as.character(data$AGdivTC))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(AGdivTC ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(log2(AGdivTC) ~ log2(temperature), data_comp, lambda="ML"))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
table(mutSpecCytB[!is.na(mutSpecCytB$temperature),]$Class)
mutSpecAllMean = mutSpec %>% group_by(Species, Class, temperature, matur_tm); mutSpecAllMean = mutSpecAllMean %>% summarise(A_C.SubstRate.heavy=mean(A_C.SubstRate.heavy), A_G.SubstRate.heavy=mean(A_G.SubstRate.heavy), A_T.SubstRate.heavy=mean(A_T.SubstRate.heavy), C_A.SubstRate.heavy=mean(C_A.SubstRate.heavy), C_G.SubstRate.heavy=mean(C_G.SubstRate.heavy), C_T.SubstRate.heavy=mean(C_T.SubstRate.heavy), G_A.SubstRate.heavy=mean(G_A.SubstRate.heavy), G_C.SubstRate.heavy=mean(G_C.SubstRate.heavy), G_T.SubstRate.heavy=mean(G_T.SubstRate.heavy), T_A.SubstRate.heavy=mean(T_A.SubstRate.heavy), T_C.SubstRate.heavy=mean(T_C.SubstRate.heavy), T_G.SubstRate.heavy=mean(T_G.SubstRate.heavy))
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
mutSpecAllMeanBySums = mutSpec %>% group_by(Species, temperature); mutSpecAllMeanBySums = mutSpecAllMeanBySums %>% summarise(T.heavy=sum(T.heavy), A.heavy=sum(A.heavy), C.heavy=sum(C.heavy), G.heavy=sum(G.heavy), A_G.heavy=sum(A_G.heavy), A_T.heavy=sum(A_T.heavy), A_C.heavy=sum(A_C.heavy), T_G.heavy=sum(T_G.heavy), T_A.heavy=sum(T_A.heavy), T_C.heavy=sum(T_C.heavy), G_T.heavy=sum(G_T.heavy), G_C.heavy=sum(G_C.heavy), G_A.heavy= sum(G_A.heavy), C_G.heavy=sum(C_G.heavy), C_T.heavy=sum(C_T.heavy), C_A.heavy=sum(C_A.heavy)) %>% ungroup()
mutSpecAllMeanBySums$A_G.SubstRate.heavy=mutSpecAllMeanBySums$A_G.heavy/mutSpecAllMeanBySums$A.heavy
mutSpecAllMeanBySums$A_T.SubstRate.heavy=mutSpecAllMeanBySums$A_T.heavy/mutSpecAllMeanBySums$A.heavy
mutSpecAllMeanBySums$A_C.SubstRate.heavy=mutSpecAllMeanBySums$A_C.heavy/mutSpecAllMeanBySums$A.heavy
mutSpecAllMeanBySums$T_G.SubstRate.heavy=mutSpecAllMeanBySums$T_G.heavy/mutSpecAllMeanBySums$T.heavy
mutSpecAllMeanBySums$T_A.SubstRate.heavy=mutSpecAllMeanBySums$T_A.heavy/mutSpecAllMeanBySums$T.heavy
mutSpecAllMeanBySums$T_C.SubstRate.heavy=mutSpecAllMeanBySums$T_C.heavy/mutSpecAllMeanBySums$T.heavy
mutSpecAllMeanBySums$G_T.SubstRate.heavy=mutSpecAllMeanBySums$G_T.heavy/mutSpecAllMeanBySums$G.heavy
mutSpecAllMeanBySums$G_C.SubstRate.heavy=mutSpecAllMeanBySums$G_C.heavy/mutSpecAllMeanBySums$G.heavy
mutSpecAllMeanBySums$G_A.SubstRate.heavy=mutSpecAllMeanBySums$G_A.heavy/mutSpecAllMeanBySums$G.heavy
mutSpecAllMeanBySums$C_G.SubstRate.heavy=mutSpecAllMeanBySums$C_G.heavy/mutSpecAllMeanBySums$C.heavy
mutSpecAllMeanBySums$C_T.SubstRate.heavy=mutSpecAllMeanBySums$C_T.heavy/mutSpecAllMeanBySums$C.heavy
mutSpecAllMeanBySums$C_A.SubstRate.heavy=mutSpecAllMeanBySums$C_A.heavy/mutSpecAllMeanBySums$C.heavy
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = c("A_C.h", "A_G.h", "A_T.h", "C_A.h", "C_G.h",
"C_T.h", "G_A.h", "G_C.h", "G_T.h", "T_A.h","T_C.h", "T_G.h"); names(averageMutSpec2) = c("Freq", "Subs")
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.pdf')
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
dev.off()
f1
averageMutSpec3 = mutSpecAllMeanBySums[,19:30]
averageMutSpec3 = as.data.frame(apply(averageMutSpec3, 2, mean)); averageMutSpec3$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec3) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec3, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
cor.test(mutSpecCytB$A_G.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$G_A.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$T_C.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecCytB$C_T.SubstRate.heavy,mutSpecCytB$temperature, method = 'spearman')
cor.test(mutSpecAllMean$A_G.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$G_A.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$T_C.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMean$C_T.SubstRate.heavy,mutSpecAllMean$temperature, method = 'spearman')
cor.test(mutSpecAllMeanBySums$A_G.SubstRate.heavy,mutSpecAllMeanBySums$temperature, method = 'spearman')
cor.test(mutSpecAllMeanBySums$G_A.SubstRate.heavy,mutSpecAllMeanBySums$temperature, method = 'spearman')
cor.test(mutSpecAllMeanBySums$T_C.SubstRate.heavy,mutSpecAllMeanBySums$temperature, method = 'spearman')
cor.test(mutSpecAllMeanBySums$C_T.SubstRate.heavy,mutSpecAllMeanBySums$temperature, method = 'spearman')
mutSpecCytB$AGdivTC=mutSpecCytB$A_G.SubstRate.heavy/mutSpecCytB$T_C.SubstRate.heavy
mutSpecCytB[mutSpecCytB$AGdivTC == "Inf" | mutSpecCytB$AGdivTC == "NaN",]$AGdivTC = NA
cor.test(mutSpecCytB$AGdivTC,mutSpecCytB$temperature, method = 'spearman')
mutSpecAllMean$AGdivTC=mutSpecAllMean$A_G.SubstRate.heavy/mutSpecAllMean$T_C.SubstRate.heavy
mutSpecAllMean[mutSpecAllMean$AGdivTC == "Inf" | mutSpecAllMean$AGdivTC == "NaN",]$AGdivTC = NA
cor.test(mutSpecAllMean$AGdivTC,mutSpecAllMean$temperature, method = 'spearman')
mutSpecAllMean = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]; N = as.character(paste("N", nrow(mutSpecAllMean), sep="")) #delete NA
f1a = ggscatter(mutSpecAllMean, x = "temperature", y = "A_G.SubstRate.heavy",
color = "#73514f", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 AH>GH") + stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1a
f1b1 = ggscatter(mutSpecAllMean, x = "temperature", y = "C_T.SubstRate.heavy",
color = "#055088", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 CH>TH")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1b1
f1b2 = ggscatter(mutSpecAllMean, x = "temperature", y = "G_A.SubstRate.heavy",
color = "#9c3d37", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 GH>AH")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1b2
f1c = ggscatter(mutSpecAllMean, x = "temperature", y = "AGdivTC",
color = "#814194", # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "black", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
yscale = "log2", xlab="Median annual water temperature, ?C", ylab="log2 A_GdivT_C")+ stat_cor(method = "spearman", aes(label = paste(..r.label.., ..p.label.., ..N.., sep = "~`,`~")))
f1c
cor.test(mutSpecAllMean$A_G.SubstRate.heavy,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_A.SubstRate.heavy,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$G_C.SubstRate.heavy,mutSpecAllMean$matur_tm, method = 'spearman')
cor.test(mutSpecAllMean$C_G.SubstRate.heavy,mutSpecAllMean$matur_tm, method = 'spearman')
summary(lm(formula = temperature ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecCytB))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) * scale(matur_tm), data = mutSpecCytB))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) + scale(matur_tm), data = mutSpecCytB))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature), data = mutSpecCytB))
mutSpecCytBNAzeroomit = mutSpecCytB[!is.na(mutSpecCytB$AGdivTC),]
mutSpecCytBNAzeroomit = mutSpecCytBNAzeroomit[mutSpecCytBNAzeroomit$AGdivTC != 0,]
summary(lm(formula = AGdivTC ~ scale(temperature) * scale(matur_tm), data = mutSpecCytBNAzeroomit))
summary(lm(formula = AGdivTC ~ scale(temperature) + scale(matur_tm), data = mutSpecCytBNAzeroomit))
summary(lm(formula = AGdivTC ~ scale(temperature), data = mutSpecCytBNAzeroomit))
summary(lm(formula = temperature ~ scale(A_G.SubstRate.heavy) + scale(C_T.SubstRate.heavy), data = mutSpecAllMean))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMean))
summary(lm(formula = A_G.SubstRate.heavy ~ scale(temperature), data = mutSpecAllMean))
mutSpecAllMeanNAzeroomit = mutSpecAllMean[!is.na(mutSpecAllMean$AGdivTC),]
mutSpecAllMeanNAzeroomit = mutSpecAllMeanNAzeroomit[mutSpecAllMeanNAzeroomit$AGdivTC != 0,]
summary(lm(formula = AGdivTC ~ scale(temperature) * scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = AGdivTC ~ scale(temperature) + scale(matur_tm), data = mutSpecAllMeanNAzeroomit))
summary(lm(formula = AGdivTC ~ scale(temperature), data = mutSpecAllMeanNAzeroomit))
tree = read.tree('../Data/1raw/mtalign.aln.treefile.rooted')
row.names(mutSpecCytBNAzeroomit) = mutSpecCytBNAzeroomit$Species
tree_pruned = treedata(tree, mutSpecCytBNAzeroomit, sort=T, warnings=T)$phy
data<-as.data.frame(treedata(tree_pruned, mutSpecCytBNAzeroomit, sort=T, warnings=T)$data)
data$Species = as.character(data$Species)
data$AGdivTC = as.numeric(as.character(data$AGdivTC))
data$temperature = as.numeric(as.character(data$temperature))
data$matur_tm = as.numeric(as.character(data$matur_tm))
data_comp <- comparative.data(tree_pruned, data, Species, vcv=TRUE)
summary(pgls(AGdivTC ~ scale(temperature), data_comp, lambda="ML"))
summary(pgls(log2(AGdivTC) ~ log2(temperature), data_comp, lambda="ML"))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
mutSpecCytB = mutSpec[mutSpec$Gene == "CytB",]
table(mutSpecCytB[!is.na(mutSpecCytB$temperature),]$Class)
mutSpecAllMean = mutSpec %>% group_by(Species, Class, temperature, matur_tm); mutSpecAllMean = mutSpecAllMean %>% summarise(A_C.SubstRate.heavy=mean(A_C.SubstRate.heavy), A_G.SubstRate.heavy=mean(A_G.SubstRate.heavy), A_T.SubstRate.heavy=mean(A_T.SubstRate.heavy), C_A.SubstRate.heavy=mean(C_A.SubstRate.heavy), C_G.SubstRate.heavy=mean(C_G.SubstRate.heavy), C_T.SubstRate.heavy=mean(C_T.SubstRate.heavy), G_A.SubstRate.heavy=mean(G_A.SubstRate.heavy), G_C.SubstRate.heavy=mean(G_C.SubstRate.heavy), G_T.SubstRate.heavy=mean(G_T.SubstRate.heavy), T_A.SubstRate.heavy=mean(T_A.SubstRate.heavy), T_C.SubstRate.heavy=mean(T_C.SubstRate.heavy), T_G.SubstRate.heavy=mean(T_G.SubstRate.heavy))
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
mutSpecAllMeanBySums = mutSpec %>% group_by(Species, temperature); mutSpecAllMeanBySums = mutSpecAllMeanBySums %>% summarise(T.heavy=sum(T.heavy), A.heavy=sum(A.heavy), C.heavy=sum(C.heavy), G.heavy=sum(G.heavy), A_G.heavy=sum(A_G.heavy), A_T.heavy=sum(A_T.heavy), A_C.heavy=sum(A_C.heavy), T_G.heavy=sum(T_G.heavy), T_A.heavy=sum(T_A.heavy), T_C.heavy=sum(T_C.heavy), G_T.heavy=sum(G_T.heavy), G_C.heavy=sum(G_C.heavy), G_A.heavy= sum(G_A.heavy), C_G.heavy=sum(C_G.heavy), C_T.heavy=sum(C_T.heavy), C_A.heavy=sum(C_A.heavy)) %>% ungroup()
mutSpecAllMeanBySums$A_G.SubstRate.heavy=mutSpecAllMeanBySums$A_G.heavy/mutSpecAllMeanBySums$A.heavy
mutSpecAllMeanBySums$A_T.SubstRate.heavy=mutSpecAllMeanBySums$A_T.heavy/mutSpecAllMeanBySums$A.heavy
mutSpecAllMeanBySums$A_C.SubstRate.heavy=mutSpecAllMeanBySums$A_C.heavy/mutSpecAllMeanBySums$A.heavy
mutSpecAllMeanBySums$T_G.SubstRate.heavy=mutSpecAllMeanBySums$T_G.heavy/mutSpecAllMeanBySums$T.heavy
mutSpecAllMeanBySums$T_A.SubstRate.heavy=mutSpecAllMeanBySums$T_A.heavy/mutSpecAllMeanBySums$T.heavy
mutSpecAllMeanBySums$T_C.SubstRate.heavy=mutSpecAllMeanBySums$T_C.heavy/mutSpecAllMeanBySums$T.heavy
mutSpecAllMeanBySums$G_T.SubstRate.heavy=mutSpecAllMeanBySums$G_T.heavy/mutSpecAllMeanBySums$G.heavy
mutSpecAllMeanBySums$G_C.SubstRate.heavy=mutSpecAllMeanBySums$G_C.heavy/mutSpecAllMeanBySums$G.heavy
mutSpecAllMeanBySums$G_A.SubstRate.heavy=mutSpecAllMeanBySums$G_A.heavy/mutSpecAllMeanBySums$G.heavy
mutSpecAllMeanBySums$C_G.SubstRate.heavy=mutSpecAllMeanBySums$C_G.heavy/mutSpecAllMeanBySums$C.heavy
mutSpecAllMeanBySums$C_T.SubstRate.heavy=mutSpecAllMeanBySums$C_T.heavy/mutSpecAllMeanBySums$C.heavy
mutSpecAllMeanBySums$C_A.SubstRate.heavy=mutSpecAllMeanBySums$C_A.heavy/mutSpecAllMeanBySums$C.heavy
table(mutSpecAllMean[!is.na(mutSpecAllMean$temperature),]$Class)
averageMutSpec1 = mutSpecCytB[!is.na(mutSpecCytB$temperature),][,26:37]
averageMutSpec1 = as.data.frame(apply(averageMutSpec1, 2, mean)); averageMutSpec1$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec1) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec1, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
averageMutSpec2 = mutSpecAllMean[!is.na(mutSpecAllMean$temperature),][,5:16]
averageMutSpec2 = averageMutSpec2[!is.na(averageMutSpec2$C_A.SubstRate.heavy) & !is.na(averageMutSpec2$C_G.SubstRate.heavy) & !is.na(averageMutSpec2$C_T.SubstRate.heavy),]
averageMutSpec2 = as.data.frame(apply(averageMutSpec2, 2, mean)); averageMutSpec2$Subs = c("A_C.h", "A_G.h", "A_T.h", "C_A.h", "C_G.h",
"C_T.h", "G_A.h", "G_C.h", "G_T.h", "T_A.h","T_C.h", "T_G.h"); names(averageMutSpec2) = c("Freq", "Subs")
pdf('../Figures/PolymorphicData.Actinopterygii.AverageMutSpec.pdf')
f1 = ggbarplot(averageMutSpec2, x = "Subs", y = "Freq", fill = "Subs", color = "Subs", palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
dev.off()
f1
averageMutSpec3 = mutSpecAllMeanBySums[,19:30]
averageMutSpec3 = as.data.frame(apply(averageMutSpec3, 2, mean)); averageMutSpec3$Subs = c("A_G.h", "A_T.h", "A_C.h", "T_G.h", "T_A.h", "T_C.h", "G_T.h", "G_C.h", "G_A.h", "C_G.h", "C_T.h", "C_A.h"); names(averageMutSpec3) = c("Freq", "Subs")
f1 = ggbarplot(averageMutSpec3, x = "Subs", y = "Freq", fill = "Subs", color = "Subs",
xlab="Substitution types", ylab="Normalised frequencies", legend = "none")
f1
cor.test(mutSpec$temperature, mutSpec$matur_tm, method = 'spearman')
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(caper)) install.packages("caper")
if (!require(geiger)) install.packages("geiger")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
library(caper)
library(geiger)
library(ggpubr)
library(dplyr)
mutSpec = read.table('../Data/3results/VertebratePolymorphisms.MutSpecData.txt', header = TRUE)
View(mutSpec)
library(caper)
library(geiger)
library(ggplot2)
library(dplyr)
rm(list=ls(all=TRUE))
muttemp = read.table('../data/3results/VertebratePolymorphisms.MutSpecData.txt', header =TRUE)
mutSpecAllMean = muttemp %>% group_by(Species, Class, temperature, matur_tm, Gene) %>%
summarise(A_C.N = T_G / NumOfFourFoldMut,
A_G.N = T_C / NumOfFourFoldMut,
A_T.N = T_A / NumOfFourFoldMut,
C_A.N = G_T / NumOfFourFoldMut,
C_G.N = G_C / NumOfFourFoldMut,
C_T.N = G_A / NumOfFourFoldMut,
G_A.N = C_T / NumOfFourFoldMut,
G_C.N = C_G / NumOfFourFoldMut,
G_T.N = C_A / NumOfFourFoldMut,
T_A.N = A_T / NumOfFourFoldMut,
T_C.N = A_G / NumOfFourFoldMut,
T_G.N = A_C / NumOfFourFoldMut)
View(muttemp)
